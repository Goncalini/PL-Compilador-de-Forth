Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ATOI

Grammar

Rule 0     S' -> Line
Rule 1     Line -> Line Elem
Rule 2     Line -> <empty>
Rule 3     Exec -> Exec Elem
Rule 4     Exec -> Elem
Rule 5     Elem -> NUMB
Rule 6     Elem -> Operador
Rule 7     Elem -> .
Rule 8     Elem -> . STRING
Rule 9     Elem -> CHAR LETTER
Rule 10    Elem -> Loop
Rule 11    Elem -> Var
Rule 12    Elem -> COMENT
Rule 13    Elem -> EMIT
Rule 14    Elem -> CR
Rule 15    Elem -> SWAP
Rule 16    Elem -> DUP
Rule 17    Elem -> DROP
Rule 18    Elem -> KEY
Rule 19    Elem -> SPACE
Rule 20    Elem -> Function
Rule 21    Elem -> Word
Rule 22    Operador -> ADD
Rule 23    Operador -> SUB
Rule 24    Operador -> DIV
Rule 25    Operador -> MUL
Rule 26    Operador -> MOD
Rule 27    Operador -> NOT
Rule 28    Operador -> AND
Rule 29    Operador -> OR
Rule 30    Operador -> EQUAL
Rule 31    Operador -> BIGGERTHEN
Rule 32    Operador -> SMALLERTHEN
Rule 33    Operador -> BIGOREQ
Rule 34    Operador -> SMALOREQ
Rule 35    Var -> VARIABLE WORD
Rule 36    Var -> LOOPI
Rule 37    Var -> WORD !
Rule 38    Var -> WORD ?
Rule 39    Var -> WORD @
Rule 40    Var -> WORD MAIS_EXCLAMACAO
Rule 41    Elem -> IF Exec THEN
Rule 42    Elem -> IF Exec ELSE Exec THEN
Rule 43    Loop -> Begin Exec UNTIL
Rule 44    Loop -> Begin Exec WHILE Exec REPEAT
Rule 45    Loop -> Do Exec LOOP
Rule 46    Begin -> BEGIN
Rule 47    Do -> DO
Rule 48    Function -> Dots WORD Exec ;
Rule 49    Dots -> :
Rule 50    Word -> WORD
Rule 51    Word -> SPACES

Terminals, with rules where they appear

!                    : 37
.                    : 7 8
:                    : 49
;                    : 48
?                    : 38
@                    : 39
ADD                  : 22
AND                  : 28
ATOI                 : 
BEGIN                : 46
BIGGERTHEN           : 31
BIGOREQ              : 33
CHAR                 : 9
COMENT               : 12
CR                   : 14
DIV                  : 24
DO                   : 47
DROP                 : 17
DUP                  : 16
ELSE                 : 42
EMIT                 : 13
EQUAL                : 30
IF                   : 41 42
KEY                  : 18
LETTER               : 9
LOOP                 : 45
LOOPI                : 36
MAIS_EXCLAMACAO      : 40
MOD                  : 26
MUL                  : 25
NOT                  : 27
NUMB                 : 5
OR                   : 29
REPEAT               : 44
SMALLERTHEN          : 32
SMALOREQ             : 34
SPACE                : 19
SPACES               : 51
STRING               : 8
SUB                  : 23
SWAP                 : 15
THEN                 : 41 42
UNTIL                : 43
VARIABLE             : 35
WHILE                : 44
WORD                 : 35 37 38 39 40 48 50
error                : 

Nonterminals, with rules where they appear

Begin                : 43 44
Do                   : 45
Dots                 : 48
Elem                 : 1 3 4
Exec                 : 3 41 42 42 43 44 44 45 48
Function             : 20
Line                 : 1 0
Loop                 : 10
Operador             : 6
Var                  : 11
Word                 : 21

Parsing method: LALR

state 0

    (0) S' -> . Line
    (1) Line -> . Line Elem
    (2) Line -> .

    NUMB            reduce using rule 2 (Line -> .)
    .               reduce using rule 2 (Line -> .)
    CHAR            reduce using rule 2 (Line -> .)
    COMENT          reduce using rule 2 (Line -> .)
    EMIT            reduce using rule 2 (Line -> .)
    CR              reduce using rule 2 (Line -> .)
    SWAP            reduce using rule 2 (Line -> .)
    DUP             reduce using rule 2 (Line -> .)
    DROP            reduce using rule 2 (Line -> .)
    KEY             reduce using rule 2 (Line -> .)
    SPACE           reduce using rule 2 (Line -> .)
    IF              reduce using rule 2 (Line -> .)
    ADD             reduce using rule 2 (Line -> .)
    SUB             reduce using rule 2 (Line -> .)
    DIV             reduce using rule 2 (Line -> .)
    MUL             reduce using rule 2 (Line -> .)
    MOD             reduce using rule 2 (Line -> .)
    NOT             reduce using rule 2 (Line -> .)
    AND             reduce using rule 2 (Line -> .)
    OR              reduce using rule 2 (Line -> .)
    EQUAL           reduce using rule 2 (Line -> .)
    BIGGERTHEN      reduce using rule 2 (Line -> .)
    SMALLERTHEN     reduce using rule 2 (Line -> .)
    BIGOREQ         reduce using rule 2 (Line -> .)
    SMALOREQ        reduce using rule 2 (Line -> .)
    VARIABLE        reduce using rule 2 (Line -> .)
    LOOPI           reduce using rule 2 (Line -> .)
    WORD            reduce using rule 2 (Line -> .)
    SPACES          reduce using rule 2 (Line -> .)
    BEGIN           reduce using rule 2 (Line -> .)
    DO              reduce using rule 2 (Line -> .)
    :               reduce using rule 2 (Line -> .)
    $end            reduce using rule 2 (Line -> .)

    Line                           shift and go to state 1

state 1

    (0) S' -> Line .
    (1) Line -> Line . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Elem                           shift and go to state 2
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 2

    (1) Line -> Line Elem .

    NUMB            reduce using rule 1 (Line -> Line Elem .)
    .               reduce using rule 1 (Line -> Line Elem .)
    CHAR            reduce using rule 1 (Line -> Line Elem .)
    COMENT          reduce using rule 1 (Line -> Line Elem .)
    EMIT            reduce using rule 1 (Line -> Line Elem .)
    CR              reduce using rule 1 (Line -> Line Elem .)
    SWAP            reduce using rule 1 (Line -> Line Elem .)
    DUP             reduce using rule 1 (Line -> Line Elem .)
    DROP            reduce using rule 1 (Line -> Line Elem .)
    KEY             reduce using rule 1 (Line -> Line Elem .)
    SPACE           reduce using rule 1 (Line -> Line Elem .)
    IF              reduce using rule 1 (Line -> Line Elem .)
    ADD             reduce using rule 1 (Line -> Line Elem .)
    SUB             reduce using rule 1 (Line -> Line Elem .)
    DIV             reduce using rule 1 (Line -> Line Elem .)
    MUL             reduce using rule 1 (Line -> Line Elem .)
    MOD             reduce using rule 1 (Line -> Line Elem .)
    NOT             reduce using rule 1 (Line -> Line Elem .)
    AND             reduce using rule 1 (Line -> Line Elem .)
    OR              reduce using rule 1 (Line -> Line Elem .)
    EQUAL           reduce using rule 1 (Line -> Line Elem .)
    BIGGERTHEN      reduce using rule 1 (Line -> Line Elem .)
    SMALLERTHEN     reduce using rule 1 (Line -> Line Elem .)
    BIGOREQ         reduce using rule 1 (Line -> Line Elem .)
    SMALOREQ        reduce using rule 1 (Line -> Line Elem .)
    VARIABLE        reduce using rule 1 (Line -> Line Elem .)
    LOOPI           reduce using rule 1 (Line -> Line Elem .)
    WORD            reduce using rule 1 (Line -> Line Elem .)
    SPACES          reduce using rule 1 (Line -> Line Elem .)
    BEGIN           reduce using rule 1 (Line -> Line Elem .)
    DO              reduce using rule 1 (Line -> Line Elem .)
    :               reduce using rule 1 (Line -> Line Elem .)
    $end            reduce using rule 1 (Line -> Line Elem .)


state 3

    (5) Elem -> NUMB .

    NUMB            reduce using rule 5 (Elem -> NUMB .)
    .               reduce using rule 5 (Elem -> NUMB .)
    CHAR            reduce using rule 5 (Elem -> NUMB .)
    COMENT          reduce using rule 5 (Elem -> NUMB .)
    EMIT            reduce using rule 5 (Elem -> NUMB .)
    CR              reduce using rule 5 (Elem -> NUMB .)
    SWAP            reduce using rule 5 (Elem -> NUMB .)
    DUP             reduce using rule 5 (Elem -> NUMB .)
    DROP            reduce using rule 5 (Elem -> NUMB .)
    KEY             reduce using rule 5 (Elem -> NUMB .)
    SPACE           reduce using rule 5 (Elem -> NUMB .)
    IF              reduce using rule 5 (Elem -> NUMB .)
    ADD             reduce using rule 5 (Elem -> NUMB .)
    SUB             reduce using rule 5 (Elem -> NUMB .)
    DIV             reduce using rule 5 (Elem -> NUMB .)
    MUL             reduce using rule 5 (Elem -> NUMB .)
    MOD             reduce using rule 5 (Elem -> NUMB .)
    NOT             reduce using rule 5 (Elem -> NUMB .)
    AND             reduce using rule 5 (Elem -> NUMB .)
    OR              reduce using rule 5 (Elem -> NUMB .)
    EQUAL           reduce using rule 5 (Elem -> NUMB .)
    BIGGERTHEN      reduce using rule 5 (Elem -> NUMB .)
    SMALLERTHEN     reduce using rule 5 (Elem -> NUMB .)
    BIGOREQ         reduce using rule 5 (Elem -> NUMB .)
    SMALOREQ        reduce using rule 5 (Elem -> NUMB .)
    VARIABLE        reduce using rule 5 (Elem -> NUMB .)
    LOOPI           reduce using rule 5 (Elem -> NUMB .)
    WORD            reduce using rule 5 (Elem -> NUMB .)
    SPACES          reduce using rule 5 (Elem -> NUMB .)
    BEGIN           reduce using rule 5 (Elem -> NUMB .)
    DO              reduce using rule 5 (Elem -> NUMB .)
    :               reduce using rule 5 (Elem -> NUMB .)
    $end            reduce using rule 5 (Elem -> NUMB .)
    THEN            reduce using rule 5 (Elem -> NUMB .)
    ELSE            reduce using rule 5 (Elem -> NUMB .)
    UNTIL           reduce using rule 5 (Elem -> NUMB .)
    WHILE           reduce using rule 5 (Elem -> NUMB .)
    LOOP            reduce using rule 5 (Elem -> NUMB .)
    ;               reduce using rule 5 (Elem -> NUMB .)
    REPEAT          reduce using rule 5 (Elem -> NUMB .)


state 4

    (6) Elem -> Operador .

    NUMB            reduce using rule 6 (Elem -> Operador .)
    .               reduce using rule 6 (Elem -> Operador .)
    CHAR            reduce using rule 6 (Elem -> Operador .)
    COMENT          reduce using rule 6 (Elem -> Operador .)
    EMIT            reduce using rule 6 (Elem -> Operador .)
    CR              reduce using rule 6 (Elem -> Operador .)
    SWAP            reduce using rule 6 (Elem -> Operador .)
    DUP             reduce using rule 6 (Elem -> Operador .)
    DROP            reduce using rule 6 (Elem -> Operador .)
    KEY             reduce using rule 6 (Elem -> Operador .)
    SPACE           reduce using rule 6 (Elem -> Operador .)
    IF              reduce using rule 6 (Elem -> Operador .)
    ADD             reduce using rule 6 (Elem -> Operador .)
    SUB             reduce using rule 6 (Elem -> Operador .)
    DIV             reduce using rule 6 (Elem -> Operador .)
    MUL             reduce using rule 6 (Elem -> Operador .)
    MOD             reduce using rule 6 (Elem -> Operador .)
    NOT             reduce using rule 6 (Elem -> Operador .)
    AND             reduce using rule 6 (Elem -> Operador .)
    OR              reduce using rule 6 (Elem -> Operador .)
    EQUAL           reduce using rule 6 (Elem -> Operador .)
    BIGGERTHEN      reduce using rule 6 (Elem -> Operador .)
    SMALLERTHEN     reduce using rule 6 (Elem -> Operador .)
    BIGOREQ         reduce using rule 6 (Elem -> Operador .)
    SMALOREQ        reduce using rule 6 (Elem -> Operador .)
    VARIABLE        reduce using rule 6 (Elem -> Operador .)
    LOOPI           reduce using rule 6 (Elem -> Operador .)
    WORD            reduce using rule 6 (Elem -> Operador .)
    SPACES          reduce using rule 6 (Elem -> Operador .)
    BEGIN           reduce using rule 6 (Elem -> Operador .)
    DO              reduce using rule 6 (Elem -> Operador .)
    :               reduce using rule 6 (Elem -> Operador .)
    $end            reduce using rule 6 (Elem -> Operador .)
    THEN            reduce using rule 6 (Elem -> Operador .)
    ELSE            reduce using rule 6 (Elem -> Operador .)
    UNTIL           reduce using rule 6 (Elem -> Operador .)
    WHILE           reduce using rule 6 (Elem -> Operador .)
    LOOP            reduce using rule 6 (Elem -> Operador .)
    ;               reduce using rule 6 (Elem -> Operador .)
    REPEAT          reduce using rule 6 (Elem -> Operador .)


state 5

    (7) Elem -> . .
    (8) Elem -> . . STRING

    NUMB            reduce using rule 7 (Elem -> . .)
    .               reduce using rule 7 (Elem -> . .)
    CHAR            reduce using rule 7 (Elem -> . .)
    COMENT          reduce using rule 7 (Elem -> . .)
    EMIT            reduce using rule 7 (Elem -> . .)
    CR              reduce using rule 7 (Elem -> . .)
    SWAP            reduce using rule 7 (Elem -> . .)
    DUP             reduce using rule 7 (Elem -> . .)
    DROP            reduce using rule 7 (Elem -> . .)
    KEY             reduce using rule 7 (Elem -> . .)
    SPACE           reduce using rule 7 (Elem -> . .)
    IF              reduce using rule 7 (Elem -> . .)
    ADD             reduce using rule 7 (Elem -> . .)
    SUB             reduce using rule 7 (Elem -> . .)
    DIV             reduce using rule 7 (Elem -> . .)
    MUL             reduce using rule 7 (Elem -> . .)
    MOD             reduce using rule 7 (Elem -> . .)
    NOT             reduce using rule 7 (Elem -> . .)
    AND             reduce using rule 7 (Elem -> . .)
    OR              reduce using rule 7 (Elem -> . .)
    EQUAL           reduce using rule 7 (Elem -> . .)
    BIGGERTHEN      reduce using rule 7 (Elem -> . .)
    SMALLERTHEN     reduce using rule 7 (Elem -> . .)
    BIGOREQ         reduce using rule 7 (Elem -> . .)
    SMALOREQ        reduce using rule 7 (Elem -> . .)
    VARIABLE        reduce using rule 7 (Elem -> . .)
    LOOPI           reduce using rule 7 (Elem -> . .)
    WORD            reduce using rule 7 (Elem -> . .)
    SPACES          reduce using rule 7 (Elem -> . .)
    BEGIN           reduce using rule 7 (Elem -> . .)
    DO              reduce using rule 7 (Elem -> . .)
    :               reduce using rule 7 (Elem -> . .)
    $end            reduce using rule 7 (Elem -> . .)
    THEN            reduce using rule 7 (Elem -> . .)
    ELSE            reduce using rule 7 (Elem -> . .)
    UNTIL           reduce using rule 7 (Elem -> . .)
    WHILE           reduce using rule 7 (Elem -> . .)
    LOOP            reduce using rule 7 (Elem -> . .)
    ;               reduce using rule 7 (Elem -> . .)
    REPEAT          reduce using rule 7 (Elem -> . .)
    STRING          shift and go to state 43


state 6

    (9) Elem -> CHAR . LETTER

    LETTER          shift and go to state 44


state 7

    (10) Elem -> Loop .

    NUMB            reduce using rule 10 (Elem -> Loop .)
    .               reduce using rule 10 (Elem -> Loop .)
    CHAR            reduce using rule 10 (Elem -> Loop .)
    COMENT          reduce using rule 10 (Elem -> Loop .)
    EMIT            reduce using rule 10 (Elem -> Loop .)
    CR              reduce using rule 10 (Elem -> Loop .)
    SWAP            reduce using rule 10 (Elem -> Loop .)
    DUP             reduce using rule 10 (Elem -> Loop .)
    DROP            reduce using rule 10 (Elem -> Loop .)
    KEY             reduce using rule 10 (Elem -> Loop .)
    SPACE           reduce using rule 10 (Elem -> Loop .)
    IF              reduce using rule 10 (Elem -> Loop .)
    ADD             reduce using rule 10 (Elem -> Loop .)
    SUB             reduce using rule 10 (Elem -> Loop .)
    DIV             reduce using rule 10 (Elem -> Loop .)
    MUL             reduce using rule 10 (Elem -> Loop .)
    MOD             reduce using rule 10 (Elem -> Loop .)
    NOT             reduce using rule 10 (Elem -> Loop .)
    AND             reduce using rule 10 (Elem -> Loop .)
    OR              reduce using rule 10 (Elem -> Loop .)
    EQUAL           reduce using rule 10 (Elem -> Loop .)
    BIGGERTHEN      reduce using rule 10 (Elem -> Loop .)
    SMALLERTHEN     reduce using rule 10 (Elem -> Loop .)
    BIGOREQ         reduce using rule 10 (Elem -> Loop .)
    SMALOREQ        reduce using rule 10 (Elem -> Loop .)
    VARIABLE        reduce using rule 10 (Elem -> Loop .)
    LOOPI           reduce using rule 10 (Elem -> Loop .)
    WORD            reduce using rule 10 (Elem -> Loop .)
    SPACES          reduce using rule 10 (Elem -> Loop .)
    BEGIN           reduce using rule 10 (Elem -> Loop .)
    DO              reduce using rule 10 (Elem -> Loop .)
    :               reduce using rule 10 (Elem -> Loop .)
    $end            reduce using rule 10 (Elem -> Loop .)
    THEN            reduce using rule 10 (Elem -> Loop .)
    ELSE            reduce using rule 10 (Elem -> Loop .)
    UNTIL           reduce using rule 10 (Elem -> Loop .)
    WHILE           reduce using rule 10 (Elem -> Loop .)
    LOOP            reduce using rule 10 (Elem -> Loop .)
    ;               reduce using rule 10 (Elem -> Loop .)
    REPEAT          reduce using rule 10 (Elem -> Loop .)


state 8

    (11) Elem -> Var .

    NUMB            reduce using rule 11 (Elem -> Var .)
    .               reduce using rule 11 (Elem -> Var .)
    CHAR            reduce using rule 11 (Elem -> Var .)
    COMENT          reduce using rule 11 (Elem -> Var .)
    EMIT            reduce using rule 11 (Elem -> Var .)
    CR              reduce using rule 11 (Elem -> Var .)
    SWAP            reduce using rule 11 (Elem -> Var .)
    DUP             reduce using rule 11 (Elem -> Var .)
    DROP            reduce using rule 11 (Elem -> Var .)
    KEY             reduce using rule 11 (Elem -> Var .)
    SPACE           reduce using rule 11 (Elem -> Var .)
    IF              reduce using rule 11 (Elem -> Var .)
    ADD             reduce using rule 11 (Elem -> Var .)
    SUB             reduce using rule 11 (Elem -> Var .)
    DIV             reduce using rule 11 (Elem -> Var .)
    MUL             reduce using rule 11 (Elem -> Var .)
    MOD             reduce using rule 11 (Elem -> Var .)
    NOT             reduce using rule 11 (Elem -> Var .)
    AND             reduce using rule 11 (Elem -> Var .)
    OR              reduce using rule 11 (Elem -> Var .)
    EQUAL           reduce using rule 11 (Elem -> Var .)
    BIGGERTHEN      reduce using rule 11 (Elem -> Var .)
    SMALLERTHEN     reduce using rule 11 (Elem -> Var .)
    BIGOREQ         reduce using rule 11 (Elem -> Var .)
    SMALOREQ        reduce using rule 11 (Elem -> Var .)
    VARIABLE        reduce using rule 11 (Elem -> Var .)
    LOOPI           reduce using rule 11 (Elem -> Var .)
    WORD            reduce using rule 11 (Elem -> Var .)
    SPACES          reduce using rule 11 (Elem -> Var .)
    BEGIN           reduce using rule 11 (Elem -> Var .)
    DO              reduce using rule 11 (Elem -> Var .)
    :               reduce using rule 11 (Elem -> Var .)
    $end            reduce using rule 11 (Elem -> Var .)
    THEN            reduce using rule 11 (Elem -> Var .)
    ELSE            reduce using rule 11 (Elem -> Var .)
    UNTIL           reduce using rule 11 (Elem -> Var .)
    WHILE           reduce using rule 11 (Elem -> Var .)
    LOOP            reduce using rule 11 (Elem -> Var .)
    ;               reduce using rule 11 (Elem -> Var .)
    REPEAT          reduce using rule 11 (Elem -> Var .)


state 9

    (12) Elem -> COMENT .

    NUMB            reduce using rule 12 (Elem -> COMENT .)
    .               reduce using rule 12 (Elem -> COMENT .)
    CHAR            reduce using rule 12 (Elem -> COMENT .)
    COMENT          reduce using rule 12 (Elem -> COMENT .)
    EMIT            reduce using rule 12 (Elem -> COMENT .)
    CR              reduce using rule 12 (Elem -> COMENT .)
    SWAP            reduce using rule 12 (Elem -> COMENT .)
    DUP             reduce using rule 12 (Elem -> COMENT .)
    DROP            reduce using rule 12 (Elem -> COMENT .)
    KEY             reduce using rule 12 (Elem -> COMENT .)
    SPACE           reduce using rule 12 (Elem -> COMENT .)
    IF              reduce using rule 12 (Elem -> COMENT .)
    ADD             reduce using rule 12 (Elem -> COMENT .)
    SUB             reduce using rule 12 (Elem -> COMENT .)
    DIV             reduce using rule 12 (Elem -> COMENT .)
    MUL             reduce using rule 12 (Elem -> COMENT .)
    MOD             reduce using rule 12 (Elem -> COMENT .)
    NOT             reduce using rule 12 (Elem -> COMENT .)
    AND             reduce using rule 12 (Elem -> COMENT .)
    OR              reduce using rule 12 (Elem -> COMENT .)
    EQUAL           reduce using rule 12 (Elem -> COMENT .)
    BIGGERTHEN      reduce using rule 12 (Elem -> COMENT .)
    SMALLERTHEN     reduce using rule 12 (Elem -> COMENT .)
    BIGOREQ         reduce using rule 12 (Elem -> COMENT .)
    SMALOREQ        reduce using rule 12 (Elem -> COMENT .)
    VARIABLE        reduce using rule 12 (Elem -> COMENT .)
    LOOPI           reduce using rule 12 (Elem -> COMENT .)
    WORD            reduce using rule 12 (Elem -> COMENT .)
    SPACES          reduce using rule 12 (Elem -> COMENT .)
    BEGIN           reduce using rule 12 (Elem -> COMENT .)
    DO              reduce using rule 12 (Elem -> COMENT .)
    :               reduce using rule 12 (Elem -> COMENT .)
    $end            reduce using rule 12 (Elem -> COMENT .)
    THEN            reduce using rule 12 (Elem -> COMENT .)
    ELSE            reduce using rule 12 (Elem -> COMENT .)
    UNTIL           reduce using rule 12 (Elem -> COMENT .)
    WHILE           reduce using rule 12 (Elem -> COMENT .)
    LOOP            reduce using rule 12 (Elem -> COMENT .)
    ;               reduce using rule 12 (Elem -> COMENT .)
    REPEAT          reduce using rule 12 (Elem -> COMENT .)


state 10

    (13) Elem -> EMIT .

    NUMB            reduce using rule 13 (Elem -> EMIT .)
    .               reduce using rule 13 (Elem -> EMIT .)
    CHAR            reduce using rule 13 (Elem -> EMIT .)
    COMENT          reduce using rule 13 (Elem -> EMIT .)
    EMIT            reduce using rule 13 (Elem -> EMIT .)
    CR              reduce using rule 13 (Elem -> EMIT .)
    SWAP            reduce using rule 13 (Elem -> EMIT .)
    DUP             reduce using rule 13 (Elem -> EMIT .)
    DROP            reduce using rule 13 (Elem -> EMIT .)
    KEY             reduce using rule 13 (Elem -> EMIT .)
    SPACE           reduce using rule 13 (Elem -> EMIT .)
    IF              reduce using rule 13 (Elem -> EMIT .)
    ADD             reduce using rule 13 (Elem -> EMIT .)
    SUB             reduce using rule 13 (Elem -> EMIT .)
    DIV             reduce using rule 13 (Elem -> EMIT .)
    MUL             reduce using rule 13 (Elem -> EMIT .)
    MOD             reduce using rule 13 (Elem -> EMIT .)
    NOT             reduce using rule 13 (Elem -> EMIT .)
    AND             reduce using rule 13 (Elem -> EMIT .)
    OR              reduce using rule 13 (Elem -> EMIT .)
    EQUAL           reduce using rule 13 (Elem -> EMIT .)
    BIGGERTHEN      reduce using rule 13 (Elem -> EMIT .)
    SMALLERTHEN     reduce using rule 13 (Elem -> EMIT .)
    BIGOREQ         reduce using rule 13 (Elem -> EMIT .)
    SMALOREQ        reduce using rule 13 (Elem -> EMIT .)
    VARIABLE        reduce using rule 13 (Elem -> EMIT .)
    LOOPI           reduce using rule 13 (Elem -> EMIT .)
    WORD            reduce using rule 13 (Elem -> EMIT .)
    SPACES          reduce using rule 13 (Elem -> EMIT .)
    BEGIN           reduce using rule 13 (Elem -> EMIT .)
    DO              reduce using rule 13 (Elem -> EMIT .)
    :               reduce using rule 13 (Elem -> EMIT .)
    $end            reduce using rule 13 (Elem -> EMIT .)
    THEN            reduce using rule 13 (Elem -> EMIT .)
    ELSE            reduce using rule 13 (Elem -> EMIT .)
    UNTIL           reduce using rule 13 (Elem -> EMIT .)
    WHILE           reduce using rule 13 (Elem -> EMIT .)
    LOOP            reduce using rule 13 (Elem -> EMIT .)
    ;               reduce using rule 13 (Elem -> EMIT .)
    REPEAT          reduce using rule 13 (Elem -> EMIT .)


state 11

    (14) Elem -> CR .

    NUMB            reduce using rule 14 (Elem -> CR .)
    .               reduce using rule 14 (Elem -> CR .)
    CHAR            reduce using rule 14 (Elem -> CR .)
    COMENT          reduce using rule 14 (Elem -> CR .)
    EMIT            reduce using rule 14 (Elem -> CR .)
    CR              reduce using rule 14 (Elem -> CR .)
    SWAP            reduce using rule 14 (Elem -> CR .)
    DUP             reduce using rule 14 (Elem -> CR .)
    DROP            reduce using rule 14 (Elem -> CR .)
    KEY             reduce using rule 14 (Elem -> CR .)
    SPACE           reduce using rule 14 (Elem -> CR .)
    IF              reduce using rule 14 (Elem -> CR .)
    ADD             reduce using rule 14 (Elem -> CR .)
    SUB             reduce using rule 14 (Elem -> CR .)
    DIV             reduce using rule 14 (Elem -> CR .)
    MUL             reduce using rule 14 (Elem -> CR .)
    MOD             reduce using rule 14 (Elem -> CR .)
    NOT             reduce using rule 14 (Elem -> CR .)
    AND             reduce using rule 14 (Elem -> CR .)
    OR              reduce using rule 14 (Elem -> CR .)
    EQUAL           reduce using rule 14 (Elem -> CR .)
    BIGGERTHEN      reduce using rule 14 (Elem -> CR .)
    SMALLERTHEN     reduce using rule 14 (Elem -> CR .)
    BIGOREQ         reduce using rule 14 (Elem -> CR .)
    SMALOREQ        reduce using rule 14 (Elem -> CR .)
    VARIABLE        reduce using rule 14 (Elem -> CR .)
    LOOPI           reduce using rule 14 (Elem -> CR .)
    WORD            reduce using rule 14 (Elem -> CR .)
    SPACES          reduce using rule 14 (Elem -> CR .)
    BEGIN           reduce using rule 14 (Elem -> CR .)
    DO              reduce using rule 14 (Elem -> CR .)
    :               reduce using rule 14 (Elem -> CR .)
    $end            reduce using rule 14 (Elem -> CR .)
    THEN            reduce using rule 14 (Elem -> CR .)
    ELSE            reduce using rule 14 (Elem -> CR .)
    UNTIL           reduce using rule 14 (Elem -> CR .)
    WHILE           reduce using rule 14 (Elem -> CR .)
    LOOP            reduce using rule 14 (Elem -> CR .)
    ;               reduce using rule 14 (Elem -> CR .)
    REPEAT          reduce using rule 14 (Elem -> CR .)


state 12

    (15) Elem -> SWAP .

    NUMB            reduce using rule 15 (Elem -> SWAP .)
    .               reduce using rule 15 (Elem -> SWAP .)
    CHAR            reduce using rule 15 (Elem -> SWAP .)
    COMENT          reduce using rule 15 (Elem -> SWAP .)
    EMIT            reduce using rule 15 (Elem -> SWAP .)
    CR              reduce using rule 15 (Elem -> SWAP .)
    SWAP            reduce using rule 15 (Elem -> SWAP .)
    DUP             reduce using rule 15 (Elem -> SWAP .)
    DROP            reduce using rule 15 (Elem -> SWAP .)
    KEY             reduce using rule 15 (Elem -> SWAP .)
    SPACE           reduce using rule 15 (Elem -> SWAP .)
    IF              reduce using rule 15 (Elem -> SWAP .)
    ADD             reduce using rule 15 (Elem -> SWAP .)
    SUB             reduce using rule 15 (Elem -> SWAP .)
    DIV             reduce using rule 15 (Elem -> SWAP .)
    MUL             reduce using rule 15 (Elem -> SWAP .)
    MOD             reduce using rule 15 (Elem -> SWAP .)
    NOT             reduce using rule 15 (Elem -> SWAP .)
    AND             reduce using rule 15 (Elem -> SWAP .)
    OR              reduce using rule 15 (Elem -> SWAP .)
    EQUAL           reduce using rule 15 (Elem -> SWAP .)
    BIGGERTHEN      reduce using rule 15 (Elem -> SWAP .)
    SMALLERTHEN     reduce using rule 15 (Elem -> SWAP .)
    BIGOREQ         reduce using rule 15 (Elem -> SWAP .)
    SMALOREQ        reduce using rule 15 (Elem -> SWAP .)
    VARIABLE        reduce using rule 15 (Elem -> SWAP .)
    LOOPI           reduce using rule 15 (Elem -> SWAP .)
    WORD            reduce using rule 15 (Elem -> SWAP .)
    SPACES          reduce using rule 15 (Elem -> SWAP .)
    BEGIN           reduce using rule 15 (Elem -> SWAP .)
    DO              reduce using rule 15 (Elem -> SWAP .)
    :               reduce using rule 15 (Elem -> SWAP .)
    $end            reduce using rule 15 (Elem -> SWAP .)
    THEN            reduce using rule 15 (Elem -> SWAP .)
    ELSE            reduce using rule 15 (Elem -> SWAP .)
    UNTIL           reduce using rule 15 (Elem -> SWAP .)
    WHILE           reduce using rule 15 (Elem -> SWAP .)
    LOOP            reduce using rule 15 (Elem -> SWAP .)
    ;               reduce using rule 15 (Elem -> SWAP .)
    REPEAT          reduce using rule 15 (Elem -> SWAP .)


state 13

    (16) Elem -> DUP .

    NUMB            reduce using rule 16 (Elem -> DUP .)
    .               reduce using rule 16 (Elem -> DUP .)
    CHAR            reduce using rule 16 (Elem -> DUP .)
    COMENT          reduce using rule 16 (Elem -> DUP .)
    EMIT            reduce using rule 16 (Elem -> DUP .)
    CR              reduce using rule 16 (Elem -> DUP .)
    SWAP            reduce using rule 16 (Elem -> DUP .)
    DUP             reduce using rule 16 (Elem -> DUP .)
    DROP            reduce using rule 16 (Elem -> DUP .)
    KEY             reduce using rule 16 (Elem -> DUP .)
    SPACE           reduce using rule 16 (Elem -> DUP .)
    IF              reduce using rule 16 (Elem -> DUP .)
    ADD             reduce using rule 16 (Elem -> DUP .)
    SUB             reduce using rule 16 (Elem -> DUP .)
    DIV             reduce using rule 16 (Elem -> DUP .)
    MUL             reduce using rule 16 (Elem -> DUP .)
    MOD             reduce using rule 16 (Elem -> DUP .)
    NOT             reduce using rule 16 (Elem -> DUP .)
    AND             reduce using rule 16 (Elem -> DUP .)
    OR              reduce using rule 16 (Elem -> DUP .)
    EQUAL           reduce using rule 16 (Elem -> DUP .)
    BIGGERTHEN      reduce using rule 16 (Elem -> DUP .)
    SMALLERTHEN     reduce using rule 16 (Elem -> DUP .)
    BIGOREQ         reduce using rule 16 (Elem -> DUP .)
    SMALOREQ        reduce using rule 16 (Elem -> DUP .)
    VARIABLE        reduce using rule 16 (Elem -> DUP .)
    LOOPI           reduce using rule 16 (Elem -> DUP .)
    WORD            reduce using rule 16 (Elem -> DUP .)
    SPACES          reduce using rule 16 (Elem -> DUP .)
    BEGIN           reduce using rule 16 (Elem -> DUP .)
    DO              reduce using rule 16 (Elem -> DUP .)
    :               reduce using rule 16 (Elem -> DUP .)
    $end            reduce using rule 16 (Elem -> DUP .)
    THEN            reduce using rule 16 (Elem -> DUP .)
    ELSE            reduce using rule 16 (Elem -> DUP .)
    UNTIL           reduce using rule 16 (Elem -> DUP .)
    WHILE           reduce using rule 16 (Elem -> DUP .)
    LOOP            reduce using rule 16 (Elem -> DUP .)
    ;               reduce using rule 16 (Elem -> DUP .)
    REPEAT          reduce using rule 16 (Elem -> DUP .)


state 14

    (17) Elem -> DROP .

    NUMB            reduce using rule 17 (Elem -> DROP .)
    .               reduce using rule 17 (Elem -> DROP .)
    CHAR            reduce using rule 17 (Elem -> DROP .)
    COMENT          reduce using rule 17 (Elem -> DROP .)
    EMIT            reduce using rule 17 (Elem -> DROP .)
    CR              reduce using rule 17 (Elem -> DROP .)
    SWAP            reduce using rule 17 (Elem -> DROP .)
    DUP             reduce using rule 17 (Elem -> DROP .)
    DROP            reduce using rule 17 (Elem -> DROP .)
    KEY             reduce using rule 17 (Elem -> DROP .)
    SPACE           reduce using rule 17 (Elem -> DROP .)
    IF              reduce using rule 17 (Elem -> DROP .)
    ADD             reduce using rule 17 (Elem -> DROP .)
    SUB             reduce using rule 17 (Elem -> DROP .)
    DIV             reduce using rule 17 (Elem -> DROP .)
    MUL             reduce using rule 17 (Elem -> DROP .)
    MOD             reduce using rule 17 (Elem -> DROP .)
    NOT             reduce using rule 17 (Elem -> DROP .)
    AND             reduce using rule 17 (Elem -> DROP .)
    OR              reduce using rule 17 (Elem -> DROP .)
    EQUAL           reduce using rule 17 (Elem -> DROP .)
    BIGGERTHEN      reduce using rule 17 (Elem -> DROP .)
    SMALLERTHEN     reduce using rule 17 (Elem -> DROP .)
    BIGOREQ         reduce using rule 17 (Elem -> DROP .)
    SMALOREQ        reduce using rule 17 (Elem -> DROP .)
    VARIABLE        reduce using rule 17 (Elem -> DROP .)
    LOOPI           reduce using rule 17 (Elem -> DROP .)
    WORD            reduce using rule 17 (Elem -> DROP .)
    SPACES          reduce using rule 17 (Elem -> DROP .)
    BEGIN           reduce using rule 17 (Elem -> DROP .)
    DO              reduce using rule 17 (Elem -> DROP .)
    :               reduce using rule 17 (Elem -> DROP .)
    $end            reduce using rule 17 (Elem -> DROP .)
    THEN            reduce using rule 17 (Elem -> DROP .)
    ELSE            reduce using rule 17 (Elem -> DROP .)
    UNTIL           reduce using rule 17 (Elem -> DROP .)
    WHILE           reduce using rule 17 (Elem -> DROP .)
    LOOP            reduce using rule 17 (Elem -> DROP .)
    ;               reduce using rule 17 (Elem -> DROP .)
    REPEAT          reduce using rule 17 (Elem -> DROP .)


state 15

    (18) Elem -> KEY .

    NUMB            reduce using rule 18 (Elem -> KEY .)
    .               reduce using rule 18 (Elem -> KEY .)
    CHAR            reduce using rule 18 (Elem -> KEY .)
    COMENT          reduce using rule 18 (Elem -> KEY .)
    EMIT            reduce using rule 18 (Elem -> KEY .)
    CR              reduce using rule 18 (Elem -> KEY .)
    SWAP            reduce using rule 18 (Elem -> KEY .)
    DUP             reduce using rule 18 (Elem -> KEY .)
    DROP            reduce using rule 18 (Elem -> KEY .)
    KEY             reduce using rule 18 (Elem -> KEY .)
    SPACE           reduce using rule 18 (Elem -> KEY .)
    IF              reduce using rule 18 (Elem -> KEY .)
    ADD             reduce using rule 18 (Elem -> KEY .)
    SUB             reduce using rule 18 (Elem -> KEY .)
    DIV             reduce using rule 18 (Elem -> KEY .)
    MUL             reduce using rule 18 (Elem -> KEY .)
    MOD             reduce using rule 18 (Elem -> KEY .)
    NOT             reduce using rule 18 (Elem -> KEY .)
    AND             reduce using rule 18 (Elem -> KEY .)
    OR              reduce using rule 18 (Elem -> KEY .)
    EQUAL           reduce using rule 18 (Elem -> KEY .)
    BIGGERTHEN      reduce using rule 18 (Elem -> KEY .)
    SMALLERTHEN     reduce using rule 18 (Elem -> KEY .)
    BIGOREQ         reduce using rule 18 (Elem -> KEY .)
    SMALOREQ        reduce using rule 18 (Elem -> KEY .)
    VARIABLE        reduce using rule 18 (Elem -> KEY .)
    LOOPI           reduce using rule 18 (Elem -> KEY .)
    WORD            reduce using rule 18 (Elem -> KEY .)
    SPACES          reduce using rule 18 (Elem -> KEY .)
    BEGIN           reduce using rule 18 (Elem -> KEY .)
    DO              reduce using rule 18 (Elem -> KEY .)
    :               reduce using rule 18 (Elem -> KEY .)
    $end            reduce using rule 18 (Elem -> KEY .)
    THEN            reduce using rule 18 (Elem -> KEY .)
    ELSE            reduce using rule 18 (Elem -> KEY .)
    UNTIL           reduce using rule 18 (Elem -> KEY .)
    WHILE           reduce using rule 18 (Elem -> KEY .)
    LOOP            reduce using rule 18 (Elem -> KEY .)
    ;               reduce using rule 18 (Elem -> KEY .)
    REPEAT          reduce using rule 18 (Elem -> KEY .)


state 16

    (19) Elem -> SPACE .

    NUMB            reduce using rule 19 (Elem -> SPACE .)
    .               reduce using rule 19 (Elem -> SPACE .)
    CHAR            reduce using rule 19 (Elem -> SPACE .)
    COMENT          reduce using rule 19 (Elem -> SPACE .)
    EMIT            reduce using rule 19 (Elem -> SPACE .)
    CR              reduce using rule 19 (Elem -> SPACE .)
    SWAP            reduce using rule 19 (Elem -> SPACE .)
    DUP             reduce using rule 19 (Elem -> SPACE .)
    DROP            reduce using rule 19 (Elem -> SPACE .)
    KEY             reduce using rule 19 (Elem -> SPACE .)
    SPACE           reduce using rule 19 (Elem -> SPACE .)
    IF              reduce using rule 19 (Elem -> SPACE .)
    ADD             reduce using rule 19 (Elem -> SPACE .)
    SUB             reduce using rule 19 (Elem -> SPACE .)
    DIV             reduce using rule 19 (Elem -> SPACE .)
    MUL             reduce using rule 19 (Elem -> SPACE .)
    MOD             reduce using rule 19 (Elem -> SPACE .)
    NOT             reduce using rule 19 (Elem -> SPACE .)
    AND             reduce using rule 19 (Elem -> SPACE .)
    OR              reduce using rule 19 (Elem -> SPACE .)
    EQUAL           reduce using rule 19 (Elem -> SPACE .)
    BIGGERTHEN      reduce using rule 19 (Elem -> SPACE .)
    SMALLERTHEN     reduce using rule 19 (Elem -> SPACE .)
    BIGOREQ         reduce using rule 19 (Elem -> SPACE .)
    SMALOREQ        reduce using rule 19 (Elem -> SPACE .)
    VARIABLE        reduce using rule 19 (Elem -> SPACE .)
    LOOPI           reduce using rule 19 (Elem -> SPACE .)
    WORD            reduce using rule 19 (Elem -> SPACE .)
    SPACES          reduce using rule 19 (Elem -> SPACE .)
    BEGIN           reduce using rule 19 (Elem -> SPACE .)
    DO              reduce using rule 19 (Elem -> SPACE .)
    :               reduce using rule 19 (Elem -> SPACE .)
    $end            reduce using rule 19 (Elem -> SPACE .)
    THEN            reduce using rule 19 (Elem -> SPACE .)
    ELSE            reduce using rule 19 (Elem -> SPACE .)
    UNTIL           reduce using rule 19 (Elem -> SPACE .)
    WHILE           reduce using rule 19 (Elem -> SPACE .)
    LOOP            reduce using rule 19 (Elem -> SPACE .)
    ;               reduce using rule 19 (Elem -> SPACE .)
    REPEAT          reduce using rule 19 (Elem -> SPACE .)


state 17

    (20) Elem -> Function .

    NUMB            reduce using rule 20 (Elem -> Function .)
    .               reduce using rule 20 (Elem -> Function .)
    CHAR            reduce using rule 20 (Elem -> Function .)
    COMENT          reduce using rule 20 (Elem -> Function .)
    EMIT            reduce using rule 20 (Elem -> Function .)
    CR              reduce using rule 20 (Elem -> Function .)
    SWAP            reduce using rule 20 (Elem -> Function .)
    DUP             reduce using rule 20 (Elem -> Function .)
    DROP            reduce using rule 20 (Elem -> Function .)
    KEY             reduce using rule 20 (Elem -> Function .)
    SPACE           reduce using rule 20 (Elem -> Function .)
    IF              reduce using rule 20 (Elem -> Function .)
    ADD             reduce using rule 20 (Elem -> Function .)
    SUB             reduce using rule 20 (Elem -> Function .)
    DIV             reduce using rule 20 (Elem -> Function .)
    MUL             reduce using rule 20 (Elem -> Function .)
    MOD             reduce using rule 20 (Elem -> Function .)
    NOT             reduce using rule 20 (Elem -> Function .)
    AND             reduce using rule 20 (Elem -> Function .)
    OR              reduce using rule 20 (Elem -> Function .)
    EQUAL           reduce using rule 20 (Elem -> Function .)
    BIGGERTHEN      reduce using rule 20 (Elem -> Function .)
    SMALLERTHEN     reduce using rule 20 (Elem -> Function .)
    BIGOREQ         reduce using rule 20 (Elem -> Function .)
    SMALOREQ        reduce using rule 20 (Elem -> Function .)
    VARIABLE        reduce using rule 20 (Elem -> Function .)
    LOOPI           reduce using rule 20 (Elem -> Function .)
    WORD            reduce using rule 20 (Elem -> Function .)
    SPACES          reduce using rule 20 (Elem -> Function .)
    BEGIN           reduce using rule 20 (Elem -> Function .)
    DO              reduce using rule 20 (Elem -> Function .)
    :               reduce using rule 20 (Elem -> Function .)
    $end            reduce using rule 20 (Elem -> Function .)
    THEN            reduce using rule 20 (Elem -> Function .)
    ELSE            reduce using rule 20 (Elem -> Function .)
    UNTIL           reduce using rule 20 (Elem -> Function .)
    WHILE           reduce using rule 20 (Elem -> Function .)
    LOOP            reduce using rule 20 (Elem -> Function .)
    ;               reduce using rule 20 (Elem -> Function .)
    REPEAT          reduce using rule 20 (Elem -> Function .)


state 18

    (21) Elem -> Word .

    NUMB            reduce using rule 21 (Elem -> Word .)
    .               reduce using rule 21 (Elem -> Word .)
    CHAR            reduce using rule 21 (Elem -> Word .)
    COMENT          reduce using rule 21 (Elem -> Word .)
    EMIT            reduce using rule 21 (Elem -> Word .)
    CR              reduce using rule 21 (Elem -> Word .)
    SWAP            reduce using rule 21 (Elem -> Word .)
    DUP             reduce using rule 21 (Elem -> Word .)
    DROP            reduce using rule 21 (Elem -> Word .)
    KEY             reduce using rule 21 (Elem -> Word .)
    SPACE           reduce using rule 21 (Elem -> Word .)
    IF              reduce using rule 21 (Elem -> Word .)
    ADD             reduce using rule 21 (Elem -> Word .)
    SUB             reduce using rule 21 (Elem -> Word .)
    DIV             reduce using rule 21 (Elem -> Word .)
    MUL             reduce using rule 21 (Elem -> Word .)
    MOD             reduce using rule 21 (Elem -> Word .)
    NOT             reduce using rule 21 (Elem -> Word .)
    AND             reduce using rule 21 (Elem -> Word .)
    OR              reduce using rule 21 (Elem -> Word .)
    EQUAL           reduce using rule 21 (Elem -> Word .)
    BIGGERTHEN      reduce using rule 21 (Elem -> Word .)
    SMALLERTHEN     reduce using rule 21 (Elem -> Word .)
    BIGOREQ         reduce using rule 21 (Elem -> Word .)
    SMALOREQ        reduce using rule 21 (Elem -> Word .)
    VARIABLE        reduce using rule 21 (Elem -> Word .)
    LOOPI           reduce using rule 21 (Elem -> Word .)
    WORD            reduce using rule 21 (Elem -> Word .)
    SPACES          reduce using rule 21 (Elem -> Word .)
    BEGIN           reduce using rule 21 (Elem -> Word .)
    DO              reduce using rule 21 (Elem -> Word .)
    :               reduce using rule 21 (Elem -> Word .)
    $end            reduce using rule 21 (Elem -> Word .)
    THEN            reduce using rule 21 (Elem -> Word .)
    ELSE            reduce using rule 21 (Elem -> Word .)
    UNTIL           reduce using rule 21 (Elem -> Word .)
    WHILE           reduce using rule 21 (Elem -> Word .)
    LOOP            reduce using rule 21 (Elem -> Word .)
    ;               reduce using rule 21 (Elem -> Word .)
    REPEAT          reduce using rule 21 (Elem -> Word .)


state 19

    (41) Elem -> IF . Exec THEN
    (42) Elem -> IF . Exec ELSE Exec THEN
    (3) Exec -> . Exec Elem
    (4) Exec -> . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Exec                           shift and go to state 45
    Elem                           shift and go to state 46
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 20

    (22) Operador -> ADD .

    NUMB            reduce using rule 22 (Operador -> ADD .)
    .               reduce using rule 22 (Operador -> ADD .)
    CHAR            reduce using rule 22 (Operador -> ADD .)
    COMENT          reduce using rule 22 (Operador -> ADD .)
    EMIT            reduce using rule 22 (Operador -> ADD .)
    CR              reduce using rule 22 (Operador -> ADD .)
    SWAP            reduce using rule 22 (Operador -> ADD .)
    DUP             reduce using rule 22 (Operador -> ADD .)
    DROP            reduce using rule 22 (Operador -> ADD .)
    KEY             reduce using rule 22 (Operador -> ADD .)
    SPACE           reduce using rule 22 (Operador -> ADD .)
    IF              reduce using rule 22 (Operador -> ADD .)
    ADD             reduce using rule 22 (Operador -> ADD .)
    SUB             reduce using rule 22 (Operador -> ADD .)
    DIV             reduce using rule 22 (Operador -> ADD .)
    MUL             reduce using rule 22 (Operador -> ADD .)
    MOD             reduce using rule 22 (Operador -> ADD .)
    NOT             reduce using rule 22 (Operador -> ADD .)
    AND             reduce using rule 22 (Operador -> ADD .)
    OR              reduce using rule 22 (Operador -> ADD .)
    EQUAL           reduce using rule 22 (Operador -> ADD .)
    BIGGERTHEN      reduce using rule 22 (Operador -> ADD .)
    SMALLERTHEN     reduce using rule 22 (Operador -> ADD .)
    BIGOREQ         reduce using rule 22 (Operador -> ADD .)
    SMALOREQ        reduce using rule 22 (Operador -> ADD .)
    VARIABLE        reduce using rule 22 (Operador -> ADD .)
    LOOPI           reduce using rule 22 (Operador -> ADD .)
    WORD            reduce using rule 22 (Operador -> ADD .)
    SPACES          reduce using rule 22 (Operador -> ADD .)
    BEGIN           reduce using rule 22 (Operador -> ADD .)
    DO              reduce using rule 22 (Operador -> ADD .)
    :               reduce using rule 22 (Operador -> ADD .)
    $end            reduce using rule 22 (Operador -> ADD .)
    THEN            reduce using rule 22 (Operador -> ADD .)
    ELSE            reduce using rule 22 (Operador -> ADD .)
    UNTIL           reduce using rule 22 (Operador -> ADD .)
    WHILE           reduce using rule 22 (Operador -> ADD .)
    LOOP            reduce using rule 22 (Operador -> ADD .)
    ;               reduce using rule 22 (Operador -> ADD .)
    REPEAT          reduce using rule 22 (Operador -> ADD .)


state 21

    (23) Operador -> SUB .

    NUMB            reduce using rule 23 (Operador -> SUB .)
    .               reduce using rule 23 (Operador -> SUB .)
    CHAR            reduce using rule 23 (Operador -> SUB .)
    COMENT          reduce using rule 23 (Operador -> SUB .)
    EMIT            reduce using rule 23 (Operador -> SUB .)
    CR              reduce using rule 23 (Operador -> SUB .)
    SWAP            reduce using rule 23 (Operador -> SUB .)
    DUP             reduce using rule 23 (Operador -> SUB .)
    DROP            reduce using rule 23 (Operador -> SUB .)
    KEY             reduce using rule 23 (Operador -> SUB .)
    SPACE           reduce using rule 23 (Operador -> SUB .)
    IF              reduce using rule 23 (Operador -> SUB .)
    ADD             reduce using rule 23 (Operador -> SUB .)
    SUB             reduce using rule 23 (Operador -> SUB .)
    DIV             reduce using rule 23 (Operador -> SUB .)
    MUL             reduce using rule 23 (Operador -> SUB .)
    MOD             reduce using rule 23 (Operador -> SUB .)
    NOT             reduce using rule 23 (Operador -> SUB .)
    AND             reduce using rule 23 (Operador -> SUB .)
    OR              reduce using rule 23 (Operador -> SUB .)
    EQUAL           reduce using rule 23 (Operador -> SUB .)
    BIGGERTHEN      reduce using rule 23 (Operador -> SUB .)
    SMALLERTHEN     reduce using rule 23 (Operador -> SUB .)
    BIGOREQ         reduce using rule 23 (Operador -> SUB .)
    SMALOREQ        reduce using rule 23 (Operador -> SUB .)
    VARIABLE        reduce using rule 23 (Operador -> SUB .)
    LOOPI           reduce using rule 23 (Operador -> SUB .)
    WORD            reduce using rule 23 (Operador -> SUB .)
    SPACES          reduce using rule 23 (Operador -> SUB .)
    BEGIN           reduce using rule 23 (Operador -> SUB .)
    DO              reduce using rule 23 (Operador -> SUB .)
    :               reduce using rule 23 (Operador -> SUB .)
    $end            reduce using rule 23 (Operador -> SUB .)
    THEN            reduce using rule 23 (Operador -> SUB .)
    ELSE            reduce using rule 23 (Operador -> SUB .)
    UNTIL           reduce using rule 23 (Operador -> SUB .)
    WHILE           reduce using rule 23 (Operador -> SUB .)
    LOOP            reduce using rule 23 (Operador -> SUB .)
    ;               reduce using rule 23 (Operador -> SUB .)
    REPEAT          reduce using rule 23 (Operador -> SUB .)


state 22

    (24) Operador -> DIV .

    NUMB            reduce using rule 24 (Operador -> DIV .)
    .               reduce using rule 24 (Operador -> DIV .)
    CHAR            reduce using rule 24 (Operador -> DIV .)
    COMENT          reduce using rule 24 (Operador -> DIV .)
    EMIT            reduce using rule 24 (Operador -> DIV .)
    CR              reduce using rule 24 (Operador -> DIV .)
    SWAP            reduce using rule 24 (Operador -> DIV .)
    DUP             reduce using rule 24 (Operador -> DIV .)
    DROP            reduce using rule 24 (Operador -> DIV .)
    KEY             reduce using rule 24 (Operador -> DIV .)
    SPACE           reduce using rule 24 (Operador -> DIV .)
    IF              reduce using rule 24 (Operador -> DIV .)
    ADD             reduce using rule 24 (Operador -> DIV .)
    SUB             reduce using rule 24 (Operador -> DIV .)
    DIV             reduce using rule 24 (Operador -> DIV .)
    MUL             reduce using rule 24 (Operador -> DIV .)
    MOD             reduce using rule 24 (Operador -> DIV .)
    NOT             reduce using rule 24 (Operador -> DIV .)
    AND             reduce using rule 24 (Operador -> DIV .)
    OR              reduce using rule 24 (Operador -> DIV .)
    EQUAL           reduce using rule 24 (Operador -> DIV .)
    BIGGERTHEN      reduce using rule 24 (Operador -> DIV .)
    SMALLERTHEN     reduce using rule 24 (Operador -> DIV .)
    BIGOREQ         reduce using rule 24 (Operador -> DIV .)
    SMALOREQ        reduce using rule 24 (Operador -> DIV .)
    VARIABLE        reduce using rule 24 (Operador -> DIV .)
    LOOPI           reduce using rule 24 (Operador -> DIV .)
    WORD            reduce using rule 24 (Operador -> DIV .)
    SPACES          reduce using rule 24 (Operador -> DIV .)
    BEGIN           reduce using rule 24 (Operador -> DIV .)
    DO              reduce using rule 24 (Operador -> DIV .)
    :               reduce using rule 24 (Operador -> DIV .)
    $end            reduce using rule 24 (Operador -> DIV .)
    THEN            reduce using rule 24 (Operador -> DIV .)
    ELSE            reduce using rule 24 (Operador -> DIV .)
    UNTIL           reduce using rule 24 (Operador -> DIV .)
    WHILE           reduce using rule 24 (Operador -> DIV .)
    LOOP            reduce using rule 24 (Operador -> DIV .)
    ;               reduce using rule 24 (Operador -> DIV .)
    REPEAT          reduce using rule 24 (Operador -> DIV .)


state 23

    (25) Operador -> MUL .

    NUMB            reduce using rule 25 (Operador -> MUL .)
    .               reduce using rule 25 (Operador -> MUL .)
    CHAR            reduce using rule 25 (Operador -> MUL .)
    COMENT          reduce using rule 25 (Operador -> MUL .)
    EMIT            reduce using rule 25 (Operador -> MUL .)
    CR              reduce using rule 25 (Operador -> MUL .)
    SWAP            reduce using rule 25 (Operador -> MUL .)
    DUP             reduce using rule 25 (Operador -> MUL .)
    DROP            reduce using rule 25 (Operador -> MUL .)
    KEY             reduce using rule 25 (Operador -> MUL .)
    SPACE           reduce using rule 25 (Operador -> MUL .)
    IF              reduce using rule 25 (Operador -> MUL .)
    ADD             reduce using rule 25 (Operador -> MUL .)
    SUB             reduce using rule 25 (Operador -> MUL .)
    DIV             reduce using rule 25 (Operador -> MUL .)
    MUL             reduce using rule 25 (Operador -> MUL .)
    MOD             reduce using rule 25 (Operador -> MUL .)
    NOT             reduce using rule 25 (Operador -> MUL .)
    AND             reduce using rule 25 (Operador -> MUL .)
    OR              reduce using rule 25 (Operador -> MUL .)
    EQUAL           reduce using rule 25 (Operador -> MUL .)
    BIGGERTHEN      reduce using rule 25 (Operador -> MUL .)
    SMALLERTHEN     reduce using rule 25 (Operador -> MUL .)
    BIGOREQ         reduce using rule 25 (Operador -> MUL .)
    SMALOREQ        reduce using rule 25 (Operador -> MUL .)
    VARIABLE        reduce using rule 25 (Operador -> MUL .)
    LOOPI           reduce using rule 25 (Operador -> MUL .)
    WORD            reduce using rule 25 (Operador -> MUL .)
    SPACES          reduce using rule 25 (Operador -> MUL .)
    BEGIN           reduce using rule 25 (Operador -> MUL .)
    DO              reduce using rule 25 (Operador -> MUL .)
    :               reduce using rule 25 (Operador -> MUL .)
    $end            reduce using rule 25 (Operador -> MUL .)
    THEN            reduce using rule 25 (Operador -> MUL .)
    ELSE            reduce using rule 25 (Operador -> MUL .)
    UNTIL           reduce using rule 25 (Operador -> MUL .)
    WHILE           reduce using rule 25 (Operador -> MUL .)
    LOOP            reduce using rule 25 (Operador -> MUL .)
    ;               reduce using rule 25 (Operador -> MUL .)
    REPEAT          reduce using rule 25 (Operador -> MUL .)


state 24

    (26) Operador -> MOD .

    NUMB            reduce using rule 26 (Operador -> MOD .)
    .               reduce using rule 26 (Operador -> MOD .)
    CHAR            reduce using rule 26 (Operador -> MOD .)
    COMENT          reduce using rule 26 (Operador -> MOD .)
    EMIT            reduce using rule 26 (Operador -> MOD .)
    CR              reduce using rule 26 (Operador -> MOD .)
    SWAP            reduce using rule 26 (Operador -> MOD .)
    DUP             reduce using rule 26 (Operador -> MOD .)
    DROP            reduce using rule 26 (Operador -> MOD .)
    KEY             reduce using rule 26 (Operador -> MOD .)
    SPACE           reduce using rule 26 (Operador -> MOD .)
    IF              reduce using rule 26 (Operador -> MOD .)
    ADD             reduce using rule 26 (Operador -> MOD .)
    SUB             reduce using rule 26 (Operador -> MOD .)
    DIV             reduce using rule 26 (Operador -> MOD .)
    MUL             reduce using rule 26 (Operador -> MOD .)
    MOD             reduce using rule 26 (Operador -> MOD .)
    NOT             reduce using rule 26 (Operador -> MOD .)
    AND             reduce using rule 26 (Operador -> MOD .)
    OR              reduce using rule 26 (Operador -> MOD .)
    EQUAL           reduce using rule 26 (Operador -> MOD .)
    BIGGERTHEN      reduce using rule 26 (Operador -> MOD .)
    SMALLERTHEN     reduce using rule 26 (Operador -> MOD .)
    BIGOREQ         reduce using rule 26 (Operador -> MOD .)
    SMALOREQ        reduce using rule 26 (Operador -> MOD .)
    VARIABLE        reduce using rule 26 (Operador -> MOD .)
    LOOPI           reduce using rule 26 (Operador -> MOD .)
    WORD            reduce using rule 26 (Operador -> MOD .)
    SPACES          reduce using rule 26 (Operador -> MOD .)
    BEGIN           reduce using rule 26 (Operador -> MOD .)
    DO              reduce using rule 26 (Operador -> MOD .)
    :               reduce using rule 26 (Operador -> MOD .)
    $end            reduce using rule 26 (Operador -> MOD .)
    THEN            reduce using rule 26 (Operador -> MOD .)
    ELSE            reduce using rule 26 (Operador -> MOD .)
    UNTIL           reduce using rule 26 (Operador -> MOD .)
    WHILE           reduce using rule 26 (Operador -> MOD .)
    LOOP            reduce using rule 26 (Operador -> MOD .)
    ;               reduce using rule 26 (Operador -> MOD .)
    REPEAT          reduce using rule 26 (Operador -> MOD .)


state 25

    (27) Operador -> NOT .

    NUMB            reduce using rule 27 (Operador -> NOT .)
    .               reduce using rule 27 (Operador -> NOT .)
    CHAR            reduce using rule 27 (Operador -> NOT .)
    COMENT          reduce using rule 27 (Operador -> NOT .)
    EMIT            reduce using rule 27 (Operador -> NOT .)
    CR              reduce using rule 27 (Operador -> NOT .)
    SWAP            reduce using rule 27 (Operador -> NOT .)
    DUP             reduce using rule 27 (Operador -> NOT .)
    DROP            reduce using rule 27 (Operador -> NOT .)
    KEY             reduce using rule 27 (Operador -> NOT .)
    SPACE           reduce using rule 27 (Operador -> NOT .)
    IF              reduce using rule 27 (Operador -> NOT .)
    ADD             reduce using rule 27 (Operador -> NOT .)
    SUB             reduce using rule 27 (Operador -> NOT .)
    DIV             reduce using rule 27 (Operador -> NOT .)
    MUL             reduce using rule 27 (Operador -> NOT .)
    MOD             reduce using rule 27 (Operador -> NOT .)
    NOT             reduce using rule 27 (Operador -> NOT .)
    AND             reduce using rule 27 (Operador -> NOT .)
    OR              reduce using rule 27 (Operador -> NOT .)
    EQUAL           reduce using rule 27 (Operador -> NOT .)
    BIGGERTHEN      reduce using rule 27 (Operador -> NOT .)
    SMALLERTHEN     reduce using rule 27 (Operador -> NOT .)
    BIGOREQ         reduce using rule 27 (Operador -> NOT .)
    SMALOREQ        reduce using rule 27 (Operador -> NOT .)
    VARIABLE        reduce using rule 27 (Operador -> NOT .)
    LOOPI           reduce using rule 27 (Operador -> NOT .)
    WORD            reduce using rule 27 (Operador -> NOT .)
    SPACES          reduce using rule 27 (Operador -> NOT .)
    BEGIN           reduce using rule 27 (Operador -> NOT .)
    DO              reduce using rule 27 (Operador -> NOT .)
    :               reduce using rule 27 (Operador -> NOT .)
    $end            reduce using rule 27 (Operador -> NOT .)
    THEN            reduce using rule 27 (Operador -> NOT .)
    ELSE            reduce using rule 27 (Operador -> NOT .)
    UNTIL           reduce using rule 27 (Operador -> NOT .)
    WHILE           reduce using rule 27 (Operador -> NOT .)
    LOOP            reduce using rule 27 (Operador -> NOT .)
    ;               reduce using rule 27 (Operador -> NOT .)
    REPEAT          reduce using rule 27 (Operador -> NOT .)


state 26

    (28) Operador -> AND .

    NUMB            reduce using rule 28 (Operador -> AND .)
    .               reduce using rule 28 (Operador -> AND .)
    CHAR            reduce using rule 28 (Operador -> AND .)
    COMENT          reduce using rule 28 (Operador -> AND .)
    EMIT            reduce using rule 28 (Operador -> AND .)
    CR              reduce using rule 28 (Operador -> AND .)
    SWAP            reduce using rule 28 (Operador -> AND .)
    DUP             reduce using rule 28 (Operador -> AND .)
    DROP            reduce using rule 28 (Operador -> AND .)
    KEY             reduce using rule 28 (Operador -> AND .)
    SPACE           reduce using rule 28 (Operador -> AND .)
    IF              reduce using rule 28 (Operador -> AND .)
    ADD             reduce using rule 28 (Operador -> AND .)
    SUB             reduce using rule 28 (Operador -> AND .)
    DIV             reduce using rule 28 (Operador -> AND .)
    MUL             reduce using rule 28 (Operador -> AND .)
    MOD             reduce using rule 28 (Operador -> AND .)
    NOT             reduce using rule 28 (Operador -> AND .)
    AND             reduce using rule 28 (Operador -> AND .)
    OR              reduce using rule 28 (Operador -> AND .)
    EQUAL           reduce using rule 28 (Operador -> AND .)
    BIGGERTHEN      reduce using rule 28 (Operador -> AND .)
    SMALLERTHEN     reduce using rule 28 (Operador -> AND .)
    BIGOREQ         reduce using rule 28 (Operador -> AND .)
    SMALOREQ        reduce using rule 28 (Operador -> AND .)
    VARIABLE        reduce using rule 28 (Operador -> AND .)
    LOOPI           reduce using rule 28 (Operador -> AND .)
    WORD            reduce using rule 28 (Operador -> AND .)
    SPACES          reduce using rule 28 (Operador -> AND .)
    BEGIN           reduce using rule 28 (Operador -> AND .)
    DO              reduce using rule 28 (Operador -> AND .)
    :               reduce using rule 28 (Operador -> AND .)
    $end            reduce using rule 28 (Operador -> AND .)
    THEN            reduce using rule 28 (Operador -> AND .)
    ELSE            reduce using rule 28 (Operador -> AND .)
    UNTIL           reduce using rule 28 (Operador -> AND .)
    WHILE           reduce using rule 28 (Operador -> AND .)
    LOOP            reduce using rule 28 (Operador -> AND .)
    ;               reduce using rule 28 (Operador -> AND .)
    REPEAT          reduce using rule 28 (Operador -> AND .)


state 27

    (29) Operador -> OR .

    NUMB            reduce using rule 29 (Operador -> OR .)
    .               reduce using rule 29 (Operador -> OR .)
    CHAR            reduce using rule 29 (Operador -> OR .)
    COMENT          reduce using rule 29 (Operador -> OR .)
    EMIT            reduce using rule 29 (Operador -> OR .)
    CR              reduce using rule 29 (Operador -> OR .)
    SWAP            reduce using rule 29 (Operador -> OR .)
    DUP             reduce using rule 29 (Operador -> OR .)
    DROP            reduce using rule 29 (Operador -> OR .)
    KEY             reduce using rule 29 (Operador -> OR .)
    SPACE           reduce using rule 29 (Operador -> OR .)
    IF              reduce using rule 29 (Operador -> OR .)
    ADD             reduce using rule 29 (Operador -> OR .)
    SUB             reduce using rule 29 (Operador -> OR .)
    DIV             reduce using rule 29 (Operador -> OR .)
    MUL             reduce using rule 29 (Operador -> OR .)
    MOD             reduce using rule 29 (Operador -> OR .)
    NOT             reduce using rule 29 (Operador -> OR .)
    AND             reduce using rule 29 (Operador -> OR .)
    OR              reduce using rule 29 (Operador -> OR .)
    EQUAL           reduce using rule 29 (Operador -> OR .)
    BIGGERTHEN      reduce using rule 29 (Operador -> OR .)
    SMALLERTHEN     reduce using rule 29 (Operador -> OR .)
    BIGOREQ         reduce using rule 29 (Operador -> OR .)
    SMALOREQ        reduce using rule 29 (Operador -> OR .)
    VARIABLE        reduce using rule 29 (Operador -> OR .)
    LOOPI           reduce using rule 29 (Operador -> OR .)
    WORD            reduce using rule 29 (Operador -> OR .)
    SPACES          reduce using rule 29 (Operador -> OR .)
    BEGIN           reduce using rule 29 (Operador -> OR .)
    DO              reduce using rule 29 (Operador -> OR .)
    :               reduce using rule 29 (Operador -> OR .)
    $end            reduce using rule 29 (Operador -> OR .)
    THEN            reduce using rule 29 (Operador -> OR .)
    ELSE            reduce using rule 29 (Operador -> OR .)
    UNTIL           reduce using rule 29 (Operador -> OR .)
    WHILE           reduce using rule 29 (Operador -> OR .)
    LOOP            reduce using rule 29 (Operador -> OR .)
    ;               reduce using rule 29 (Operador -> OR .)
    REPEAT          reduce using rule 29 (Operador -> OR .)


state 28

    (30) Operador -> EQUAL .

    NUMB            reduce using rule 30 (Operador -> EQUAL .)
    .               reduce using rule 30 (Operador -> EQUAL .)
    CHAR            reduce using rule 30 (Operador -> EQUAL .)
    COMENT          reduce using rule 30 (Operador -> EQUAL .)
    EMIT            reduce using rule 30 (Operador -> EQUAL .)
    CR              reduce using rule 30 (Operador -> EQUAL .)
    SWAP            reduce using rule 30 (Operador -> EQUAL .)
    DUP             reduce using rule 30 (Operador -> EQUAL .)
    DROP            reduce using rule 30 (Operador -> EQUAL .)
    KEY             reduce using rule 30 (Operador -> EQUAL .)
    SPACE           reduce using rule 30 (Operador -> EQUAL .)
    IF              reduce using rule 30 (Operador -> EQUAL .)
    ADD             reduce using rule 30 (Operador -> EQUAL .)
    SUB             reduce using rule 30 (Operador -> EQUAL .)
    DIV             reduce using rule 30 (Operador -> EQUAL .)
    MUL             reduce using rule 30 (Operador -> EQUAL .)
    MOD             reduce using rule 30 (Operador -> EQUAL .)
    NOT             reduce using rule 30 (Operador -> EQUAL .)
    AND             reduce using rule 30 (Operador -> EQUAL .)
    OR              reduce using rule 30 (Operador -> EQUAL .)
    EQUAL           reduce using rule 30 (Operador -> EQUAL .)
    BIGGERTHEN      reduce using rule 30 (Operador -> EQUAL .)
    SMALLERTHEN     reduce using rule 30 (Operador -> EQUAL .)
    BIGOREQ         reduce using rule 30 (Operador -> EQUAL .)
    SMALOREQ        reduce using rule 30 (Operador -> EQUAL .)
    VARIABLE        reduce using rule 30 (Operador -> EQUAL .)
    LOOPI           reduce using rule 30 (Operador -> EQUAL .)
    WORD            reduce using rule 30 (Operador -> EQUAL .)
    SPACES          reduce using rule 30 (Operador -> EQUAL .)
    BEGIN           reduce using rule 30 (Operador -> EQUAL .)
    DO              reduce using rule 30 (Operador -> EQUAL .)
    :               reduce using rule 30 (Operador -> EQUAL .)
    $end            reduce using rule 30 (Operador -> EQUAL .)
    THEN            reduce using rule 30 (Operador -> EQUAL .)
    ELSE            reduce using rule 30 (Operador -> EQUAL .)
    UNTIL           reduce using rule 30 (Operador -> EQUAL .)
    WHILE           reduce using rule 30 (Operador -> EQUAL .)
    LOOP            reduce using rule 30 (Operador -> EQUAL .)
    ;               reduce using rule 30 (Operador -> EQUAL .)
    REPEAT          reduce using rule 30 (Operador -> EQUAL .)


state 29

    (31) Operador -> BIGGERTHEN .

    NUMB            reduce using rule 31 (Operador -> BIGGERTHEN .)
    .               reduce using rule 31 (Operador -> BIGGERTHEN .)
    CHAR            reduce using rule 31 (Operador -> BIGGERTHEN .)
    COMENT          reduce using rule 31 (Operador -> BIGGERTHEN .)
    EMIT            reduce using rule 31 (Operador -> BIGGERTHEN .)
    CR              reduce using rule 31 (Operador -> BIGGERTHEN .)
    SWAP            reduce using rule 31 (Operador -> BIGGERTHEN .)
    DUP             reduce using rule 31 (Operador -> BIGGERTHEN .)
    DROP            reduce using rule 31 (Operador -> BIGGERTHEN .)
    KEY             reduce using rule 31 (Operador -> BIGGERTHEN .)
    SPACE           reduce using rule 31 (Operador -> BIGGERTHEN .)
    IF              reduce using rule 31 (Operador -> BIGGERTHEN .)
    ADD             reduce using rule 31 (Operador -> BIGGERTHEN .)
    SUB             reduce using rule 31 (Operador -> BIGGERTHEN .)
    DIV             reduce using rule 31 (Operador -> BIGGERTHEN .)
    MUL             reduce using rule 31 (Operador -> BIGGERTHEN .)
    MOD             reduce using rule 31 (Operador -> BIGGERTHEN .)
    NOT             reduce using rule 31 (Operador -> BIGGERTHEN .)
    AND             reduce using rule 31 (Operador -> BIGGERTHEN .)
    OR              reduce using rule 31 (Operador -> BIGGERTHEN .)
    EQUAL           reduce using rule 31 (Operador -> BIGGERTHEN .)
    BIGGERTHEN      reduce using rule 31 (Operador -> BIGGERTHEN .)
    SMALLERTHEN     reduce using rule 31 (Operador -> BIGGERTHEN .)
    BIGOREQ         reduce using rule 31 (Operador -> BIGGERTHEN .)
    SMALOREQ        reduce using rule 31 (Operador -> BIGGERTHEN .)
    VARIABLE        reduce using rule 31 (Operador -> BIGGERTHEN .)
    LOOPI           reduce using rule 31 (Operador -> BIGGERTHEN .)
    WORD            reduce using rule 31 (Operador -> BIGGERTHEN .)
    SPACES          reduce using rule 31 (Operador -> BIGGERTHEN .)
    BEGIN           reduce using rule 31 (Operador -> BIGGERTHEN .)
    DO              reduce using rule 31 (Operador -> BIGGERTHEN .)
    :               reduce using rule 31 (Operador -> BIGGERTHEN .)
    $end            reduce using rule 31 (Operador -> BIGGERTHEN .)
    THEN            reduce using rule 31 (Operador -> BIGGERTHEN .)
    ELSE            reduce using rule 31 (Operador -> BIGGERTHEN .)
    UNTIL           reduce using rule 31 (Operador -> BIGGERTHEN .)
    WHILE           reduce using rule 31 (Operador -> BIGGERTHEN .)
    LOOP            reduce using rule 31 (Operador -> BIGGERTHEN .)
    ;               reduce using rule 31 (Operador -> BIGGERTHEN .)
    REPEAT          reduce using rule 31 (Operador -> BIGGERTHEN .)


state 30

    (32) Operador -> SMALLERTHEN .

    NUMB            reduce using rule 32 (Operador -> SMALLERTHEN .)
    .               reduce using rule 32 (Operador -> SMALLERTHEN .)
    CHAR            reduce using rule 32 (Operador -> SMALLERTHEN .)
    COMENT          reduce using rule 32 (Operador -> SMALLERTHEN .)
    EMIT            reduce using rule 32 (Operador -> SMALLERTHEN .)
    CR              reduce using rule 32 (Operador -> SMALLERTHEN .)
    SWAP            reduce using rule 32 (Operador -> SMALLERTHEN .)
    DUP             reduce using rule 32 (Operador -> SMALLERTHEN .)
    DROP            reduce using rule 32 (Operador -> SMALLERTHEN .)
    KEY             reduce using rule 32 (Operador -> SMALLERTHEN .)
    SPACE           reduce using rule 32 (Operador -> SMALLERTHEN .)
    IF              reduce using rule 32 (Operador -> SMALLERTHEN .)
    ADD             reduce using rule 32 (Operador -> SMALLERTHEN .)
    SUB             reduce using rule 32 (Operador -> SMALLERTHEN .)
    DIV             reduce using rule 32 (Operador -> SMALLERTHEN .)
    MUL             reduce using rule 32 (Operador -> SMALLERTHEN .)
    MOD             reduce using rule 32 (Operador -> SMALLERTHEN .)
    NOT             reduce using rule 32 (Operador -> SMALLERTHEN .)
    AND             reduce using rule 32 (Operador -> SMALLERTHEN .)
    OR              reduce using rule 32 (Operador -> SMALLERTHEN .)
    EQUAL           reduce using rule 32 (Operador -> SMALLERTHEN .)
    BIGGERTHEN      reduce using rule 32 (Operador -> SMALLERTHEN .)
    SMALLERTHEN     reduce using rule 32 (Operador -> SMALLERTHEN .)
    BIGOREQ         reduce using rule 32 (Operador -> SMALLERTHEN .)
    SMALOREQ        reduce using rule 32 (Operador -> SMALLERTHEN .)
    VARIABLE        reduce using rule 32 (Operador -> SMALLERTHEN .)
    LOOPI           reduce using rule 32 (Operador -> SMALLERTHEN .)
    WORD            reduce using rule 32 (Operador -> SMALLERTHEN .)
    SPACES          reduce using rule 32 (Operador -> SMALLERTHEN .)
    BEGIN           reduce using rule 32 (Operador -> SMALLERTHEN .)
    DO              reduce using rule 32 (Operador -> SMALLERTHEN .)
    :               reduce using rule 32 (Operador -> SMALLERTHEN .)
    $end            reduce using rule 32 (Operador -> SMALLERTHEN .)
    THEN            reduce using rule 32 (Operador -> SMALLERTHEN .)
    ELSE            reduce using rule 32 (Operador -> SMALLERTHEN .)
    UNTIL           reduce using rule 32 (Operador -> SMALLERTHEN .)
    WHILE           reduce using rule 32 (Operador -> SMALLERTHEN .)
    LOOP            reduce using rule 32 (Operador -> SMALLERTHEN .)
    ;               reduce using rule 32 (Operador -> SMALLERTHEN .)
    REPEAT          reduce using rule 32 (Operador -> SMALLERTHEN .)


state 31

    (33) Operador -> BIGOREQ .

    NUMB            reduce using rule 33 (Operador -> BIGOREQ .)
    .               reduce using rule 33 (Operador -> BIGOREQ .)
    CHAR            reduce using rule 33 (Operador -> BIGOREQ .)
    COMENT          reduce using rule 33 (Operador -> BIGOREQ .)
    EMIT            reduce using rule 33 (Operador -> BIGOREQ .)
    CR              reduce using rule 33 (Operador -> BIGOREQ .)
    SWAP            reduce using rule 33 (Operador -> BIGOREQ .)
    DUP             reduce using rule 33 (Operador -> BIGOREQ .)
    DROP            reduce using rule 33 (Operador -> BIGOREQ .)
    KEY             reduce using rule 33 (Operador -> BIGOREQ .)
    SPACE           reduce using rule 33 (Operador -> BIGOREQ .)
    IF              reduce using rule 33 (Operador -> BIGOREQ .)
    ADD             reduce using rule 33 (Operador -> BIGOREQ .)
    SUB             reduce using rule 33 (Operador -> BIGOREQ .)
    DIV             reduce using rule 33 (Operador -> BIGOREQ .)
    MUL             reduce using rule 33 (Operador -> BIGOREQ .)
    MOD             reduce using rule 33 (Operador -> BIGOREQ .)
    NOT             reduce using rule 33 (Operador -> BIGOREQ .)
    AND             reduce using rule 33 (Operador -> BIGOREQ .)
    OR              reduce using rule 33 (Operador -> BIGOREQ .)
    EQUAL           reduce using rule 33 (Operador -> BIGOREQ .)
    BIGGERTHEN      reduce using rule 33 (Operador -> BIGOREQ .)
    SMALLERTHEN     reduce using rule 33 (Operador -> BIGOREQ .)
    BIGOREQ         reduce using rule 33 (Operador -> BIGOREQ .)
    SMALOREQ        reduce using rule 33 (Operador -> BIGOREQ .)
    VARIABLE        reduce using rule 33 (Operador -> BIGOREQ .)
    LOOPI           reduce using rule 33 (Operador -> BIGOREQ .)
    WORD            reduce using rule 33 (Operador -> BIGOREQ .)
    SPACES          reduce using rule 33 (Operador -> BIGOREQ .)
    BEGIN           reduce using rule 33 (Operador -> BIGOREQ .)
    DO              reduce using rule 33 (Operador -> BIGOREQ .)
    :               reduce using rule 33 (Operador -> BIGOREQ .)
    $end            reduce using rule 33 (Operador -> BIGOREQ .)
    THEN            reduce using rule 33 (Operador -> BIGOREQ .)
    ELSE            reduce using rule 33 (Operador -> BIGOREQ .)
    UNTIL           reduce using rule 33 (Operador -> BIGOREQ .)
    WHILE           reduce using rule 33 (Operador -> BIGOREQ .)
    LOOP            reduce using rule 33 (Operador -> BIGOREQ .)
    ;               reduce using rule 33 (Operador -> BIGOREQ .)
    REPEAT          reduce using rule 33 (Operador -> BIGOREQ .)


state 32

    (34) Operador -> SMALOREQ .

    NUMB            reduce using rule 34 (Operador -> SMALOREQ .)
    .               reduce using rule 34 (Operador -> SMALOREQ .)
    CHAR            reduce using rule 34 (Operador -> SMALOREQ .)
    COMENT          reduce using rule 34 (Operador -> SMALOREQ .)
    EMIT            reduce using rule 34 (Operador -> SMALOREQ .)
    CR              reduce using rule 34 (Operador -> SMALOREQ .)
    SWAP            reduce using rule 34 (Operador -> SMALOREQ .)
    DUP             reduce using rule 34 (Operador -> SMALOREQ .)
    DROP            reduce using rule 34 (Operador -> SMALOREQ .)
    KEY             reduce using rule 34 (Operador -> SMALOREQ .)
    SPACE           reduce using rule 34 (Operador -> SMALOREQ .)
    IF              reduce using rule 34 (Operador -> SMALOREQ .)
    ADD             reduce using rule 34 (Operador -> SMALOREQ .)
    SUB             reduce using rule 34 (Operador -> SMALOREQ .)
    DIV             reduce using rule 34 (Operador -> SMALOREQ .)
    MUL             reduce using rule 34 (Operador -> SMALOREQ .)
    MOD             reduce using rule 34 (Operador -> SMALOREQ .)
    NOT             reduce using rule 34 (Operador -> SMALOREQ .)
    AND             reduce using rule 34 (Operador -> SMALOREQ .)
    OR              reduce using rule 34 (Operador -> SMALOREQ .)
    EQUAL           reduce using rule 34 (Operador -> SMALOREQ .)
    BIGGERTHEN      reduce using rule 34 (Operador -> SMALOREQ .)
    SMALLERTHEN     reduce using rule 34 (Operador -> SMALOREQ .)
    BIGOREQ         reduce using rule 34 (Operador -> SMALOREQ .)
    SMALOREQ        reduce using rule 34 (Operador -> SMALOREQ .)
    VARIABLE        reduce using rule 34 (Operador -> SMALOREQ .)
    LOOPI           reduce using rule 34 (Operador -> SMALOREQ .)
    WORD            reduce using rule 34 (Operador -> SMALOREQ .)
    SPACES          reduce using rule 34 (Operador -> SMALOREQ .)
    BEGIN           reduce using rule 34 (Operador -> SMALOREQ .)
    DO              reduce using rule 34 (Operador -> SMALOREQ .)
    :               reduce using rule 34 (Operador -> SMALOREQ .)
    $end            reduce using rule 34 (Operador -> SMALOREQ .)
    THEN            reduce using rule 34 (Operador -> SMALOREQ .)
    ELSE            reduce using rule 34 (Operador -> SMALOREQ .)
    UNTIL           reduce using rule 34 (Operador -> SMALOREQ .)
    WHILE           reduce using rule 34 (Operador -> SMALOREQ .)
    LOOP            reduce using rule 34 (Operador -> SMALOREQ .)
    ;               reduce using rule 34 (Operador -> SMALOREQ .)
    REPEAT          reduce using rule 34 (Operador -> SMALOREQ .)


state 33

    (43) Loop -> Begin . Exec UNTIL
    (44) Loop -> Begin . Exec WHILE Exec REPEAT
    (3) Exec -> . Exec Elem
    (4) Exec -> . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Begin                          shift and go to state 33
    Exec                           shift and go to state 47
    Elem                           shift and go to state 46
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 34

    (45) Loop -> Do . Exec LOOP
    (3) Exec -> . Exec Elem
    (4) Exec -> . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Do                             shift and go to state 34
    Exec                           shift and go to state 48
    Elem                           shift and go to state 46
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Dots                           shift and go to state 38

state 35

    (35) Var -> VARIABLE . WORD

    WORD            shift and go to state 49


state 36

    (37) Var -> WORD . !
    (38) Var -> WORD . ?
    (39) Var -> WORD . @
    (40) Var -> WORD . MAIS_EXCLAMACAO
    (50) Word -> WORD .

    !               shift and go to state 50
    ?               shift and go to state 51
    @               shift and go to state 52
    MAIS_EXCLAMACAO shift and go to state 53
    NUMB            reduce using rule 50 (Word -> WORD .)
    .               reduce using rule 50 (Word -> WORD .)
    CHAR            reduce using rule 50 (Word -> WORD .)
    COMENT          reduce using rule 50 (Word -> WORD .)
    EMIT            reduce using rule 50 (Word -> WORD .)
    CR              reduce using rule 50 (Word -> WORD .)
    SWAP            reduce using rule 50 (Word -> WORD .)
    DUP             reduce using rule 50 (Word -> WORD .)
    DROP            reduce using rule 50 (Word -> WORD .)
    KEY             reduce using rule 50 (Word -> WORD .)
    SPACE           reduce using rule 50 (Word -> WORD .)
    IF              reduce using rule 50 (Word -> WORD .)
    ADD             reduce using rule 50 (Word -> WORD .)
    SUB             reduce using rule 50 (Word -> WORD .)
    DIV             reduce using rule 50 (Word -> WORD .)
    MUL             reduce using rule 50 (Word -> WORD .)
    MOD             reduce using rule 50 (Word -> WORD .)
    NOT             reduce using rule 50 (Word -> WORD .)
    AND             reduce using rule 50 (Word -> WORD .)
    OR              reduce using rule 50 (Word -> WORD .)
    EQUAL           reduce using rule 50 (Word -> WORD .)
    BIGGERTHEN      reduce using rule 50 (Word -> WORD .)
    SMALLERTHEN     reduce using rule 50 (Word -> WORD .)
    BIGOREQ         reduce using rule 50 (Word -> WORD .)
    SMALOREQ        reduce using rule 50 (Word -> WORD .)
    VARIABLE        reduce using rule 50 (Word -> WORD .)
    LOOPI           reduce using rule 50 (Word -> WORD .)
    WORD            reduce using rule 50 (Word -> WORD .)
    SPACES          reduce using rule 50 (Word -> WORD .)
    BEGIN           reduce using rule 50 (Word -> WORD .)
    DO              reduce using rule 50 (Word -> WORD .)
    :               reduce using rule 50 (Word -> WORD .)
    $end            reduce using rule 50 (Word -> WORD .)
    THEN            reduce using rule 50 (Word -> WORD .)
    ELSE            reduce using rule 50 (Word -> WORD .)
    UNTIL           reduce using rule 50 (Word -> WORD .)
    WHILE           reduce using rule 50 (Word -> WORD .)
    LOOP            reduce using rule 50 (Word -> WORD .)
    ;               reduce using rule 50 (Word -> WORD .)
    REPEAT          reduce using rule 50 (Word -> WORD .)


state 37

    (36) Var -> LOOPI .

    NUMB            reduce using rule 36 (Var -> LOOPI .)
    .               reduce using rule 36 (Var -> LOOPI .)
    CHAR            reduce using rule 36 (Var -> LOOPI .)
    COMENT          reduce using rule 36 (Var -> LOOPI .)
    EMIT            reduce using rule 36 (Var -> LOOPI .)
    CR              reduce using rule 36 (Var -> LOOPI .)
    SWAP            reduce using rule 36 (Var -> LOOPI .)
    DUP             reduce using rule 36 (Var -> LOOPI .)
    DROP            reduce using rule 36 (Var -> LOOPI .)
    KEY             reduce using rule 36 (Var -> LOOPI .)
    SPACE           reduce using rule 36 (Var -> LOOPI .)
    IF              reduce using rule 36 (Var -> LOOPI .)
    ADD             reduce using rule 36 (Var -> LOOPI .)
    SUB             reduce using rule 36 (Var -> LOOPI .)
    DIV             reduce using rule 36 (Var -> LOOPI .)
    MUL             reduce using rule 36 (Var -> LOOPI .)
    MOD             reduce using rule 36 (Var -> LOOPI .)
    NOT             reduce using rule 36 (Var -> LOOPI .)
    AND             reduce using rule 36 (Var -> LOOPI .)
    OR              reduce using rule 36 (Var -> LOOPI .)
    EQUAL           reduce using rule 36 (Var -> LOOPI .)
    BIGGERTHEN      reduce using rule 36 (Var -> LOOPI .)
    SMALLERTHEN     reduce using rule 36 (Var -> LOOPI .)
    BIGOREQ         reduce using rule 36 (Var -> LOOPI .)
    SMALOREQ        reduce using rule 36 (Var -> LOOPI .)
    VARIABLE        reduce using rule 36 (Var -> LOOPI .)
    LOOPI           reduce using rule 36 (Var -> LOOPI .)
    WORD            reduce using rule 36 (Var -> LOOPI .)
    SPACES          reduce using rule 36 (Var -> LOOPI .)
    BEGIN           reduce using rule 36 (Var -> LOOPI .)
    DO              reduce using rule 36 (Var -> LOOPI .)
    :               reduce using rule 36 (Var -> LOOPI .)
    $end            reduce using rule 36 (Var -> LOOPI .)
    THEN            reduce using rule 36 (Var -> LOOPI .)
    ELSE            reduce using rule 36 (Var -> LOOPI .)
    UNTIL           reduce using rule 36 (Var -> LOOPI .)
    WHILE           reduce using rule 36 (Var -> LOOPI .)
    LOOP            reduce using rule 36 (Var -> LOOPI .)
    ;               reduce using rule 36 (Var -> LOOPI .)
    REPEAT          reduce using rule 36 (Var -> LOOPI .)


state 38

    (48) Function -> Dots . WORD Exec ;

    WORD            shift and go to state 54


state 39

    (51) Word -> SPACES .

    NUMB            reduce using rule 51 (Word -> SPACES .)
    .               reduce using rule 51 (Word -> SPACES .)
    CHAR            reduce using rule 51 (Word -> SPACES .)
    COMENT          reduce using rule 51 (Word -> SPACES .)
    EMIT            reduce using rule 51 (Word -> SPACES .)
    CR              reduce using rule 51 (Word -> SPACES .)
    SWAP            reduce using rule 51 (Word -> SPACES .)
    DUP             reduce using rule 51 (Word -> SPACES .)
    DROP            reduce using rule 51 (Word -> SPACES .)
    KEY             reduce using rule 51 (Word -> SPACES .)
    SPACE           reduce using rule 51 (Word -> SPACES .)
    IF              reduce using rule 51 (Word -> SPACES .)
    ADD             reduce using rule 51 (Word -> SPACES .)
    SUB             reduce using rule 51 (Word -> SPACES .)
    DIV             reduce using rule 51 (Word -> SPACES .)
    MUL             reduce using rule 51 (Word -> SPACES .)
    MOD             reduce using rule 51 (Word -> SPACES .)
    NOT             reduce using rule 51 (Word -> SPACES .)
    AND             reduce using rule 51 (Word -> SPACES .)
    OR              reduce using rule 51 (Word -> SPACES .)
    EQUAL           reduce using rule 51 (Word -> SPACES .)
    BIGGERTHEN      reduce using rule 51 (Word -> SPACES .)
    SMALLERTHEN     reduce using rule 51 (Word -> SPACES .)
    BIGOREQ         reduce using rule 51 (Word -> SPACES .)
    SMALOREQ        reduce using rule 51 (Word -> SPACES .)
    VARIABLE        reduce using rule 51 (Word -> SPACES .)
    LOOPI           reduce using rule 51 (Word -> SPACES .)
    WORD            reduce using rule 51 (Word -> SPACES .)
    SPACES          reduce using rule 51 (Word -> SPACES .)
    BEGIN           reduce using rule 51 (Word -> SPACES .)
    DO              reduce using rule 51 (Word -> SPACES .)
    :               reduce using rule 51 (Word -> SPACES .)
    $end            reduce using rule 51 (Word -> SPACES .)
    THEN            reduce using rule 51 (Word -> SPACES .)
    ELSE            reduce using rule 51 (Word -> SPACES .)
    UNTIL           reduce using rule 51 (Word -> SPACES .)
    WHILE           reduce using rule 51 (Word -> SPACES .)
    LOOP            reduce using rule 51 (Word -> SPACES .)
    ;               reduce using rule 51 (Word -> SPACES .)
    REPEAT          reduce using rule 51 (Word -> SPACES .)


state 40

    (46) Begin -> BEGIN .

    NUMB            reduce using rule 46 (Begin -> BEGIN .)
    .               reduce using rule 46 (Begin -> BEGIN .)
    CHAR            reduce using rule 46 (Begin -> BEGIN .)
    COMENT          reduce using rule 46 (Begin -> BEGIN .)
    EMIT            reduce using rule 46 (Begin -> BEGIN .)
    CR              reduce using rule 46 (Begin -> BEGIN .)
    SWAP            reduce using rule 46 (Begin -> BEGIN .)
    DUP             reduce using rule 46 (Begin -> BEGIN .)
    DROP            reduce using rule 46 (Begin -> BEGIN .)
    KEY             reduce using rule 46 (Begin -> BEGIN .)
    SPACE           reduce using rule 46 (Begin -> BEGIN .)
    IF              reduce using rule 46 (Begin -> BEGIN .)
    ADD             reduce using rule 46 (Begin -> BEGIN .)
    SUB             reduce using rule 46 (Begin -> BEGIN .)
    DIV             reduce using rule 46 (Begin -> BEGIN .)
    MUL             reduce using rule 46 (Begin -> BEGIN .)
    MOD             reduce using rule 46 (Begin -> BEGIN .)
    NOT             reduce using rule 46 (Begin -> BEGIN .)
    AND             reduce using rule 46 (Begin -> BEGIN .)
    OR              reduce using rule 46 (Begin -> BEGIN .)
    EQUAL           reduce using rule 46 (Begin -> BEGIN .)
    BIGGERTHEN      reduce using rule 46 (Begin -> BEGIN .)
    SMALLERTHEN     reduce using rule 46 (Begin -> BEGIN .)
    BIGOREQ         reduce using rule 46 (Begin -> BEGIN .)
    SMALOREQ        reduce using rule 46 (Begin -> BEGIN .)
    VARIABLE        reduce using rule 46 (Begin -> BEGIN .)
    LOOPI           reduce using rule 46 (Begin -> BEGIN .)
    WORD            reduce using rule 46 (Begin -> BEGIN .)
    SPACES          reduce using rule 46 (Begin -> BEGIN .)
    BEGIN           reduce using rule 46 (Begin -> BEGIN .)
    DO              reduce using rule 46 (Begin -> BEGIN .)
    :               reduce using rule 46 (Begin -> BEGIN .)


state 41

    (47) Do -> DO .

    NUMB            reduce using rule 47 (Do -> DO .)
    .               reduce using rule 47 (Do -> DO .)
    CHAR            reduce using rule 47 (Do -> DO .)
    COMENT          reduce using rule 47 (Do -> DO .)
    EMIT            reduce using rule 47 (Do -> DO .)
    CR              reduce using rule 47 (Do -> DO .)
    SWAP            reduce using rule 47 (Do -> DO .)
    DUP             reduce using rule 47 (Do -> DO .)
    DROP            reduce using rule 47 (Do -> DO .)
    KEY             reduce using rule 47 (Do -> DO .)
    SPACE           reduce using rule 47 (Do -> DO .)
    IF              reduce using rule 47 (Do -> DO .)
    ADD             reduce using rule 47 (Do -> DO .)
    SUB             reduce using rule 47 (Do -> DO .)
    DIV             reduce using rule 47 (Do -> DO .)
    MUL             reduce using rule 47 (Do -> DO .)
    MOD             reduce using rule 47 (Do -> DO .)
    NOT             reduce using rule 47 (Do -> DO .)
    AND             reduce using rule 47 (Do -> DO .)
    OR              reduce using rule 47 (Do -> DO .)
    EQUAL           reduce using rule 47 (Do -> DO .)
    BIGGERTHEN      reduce using rule 47 (Do -> DO .)
    SMALLERTHEN     reduce using rule 47 (Do -> DO .)
    BIGOREQ         reduce using rule 47 (Do -> DO .)
    SMALOREQ        reduce using rule 47 (Do -> DO .)
    VARIABLE        reduce using rule 47 (Do -> DO .)
    LOOPI           reduce using rule 47 (Do -> DO .)
    WORD            reduce using rule 47 (Do -> DO .)
    SPACES          reduce using rule 47 (Do -> DO .)
    BEGIN           reduce using rule 47 (Do -> DO .)
    DO              reduce using rule 47 (Do -> DO .)
    :               reduce using rule 47 (Do -> DO .)


state 42

    (49) Dots -> : .

    WORD            reduce using rule 49 (Dots -> : .)


state 43

    (8) Elem -> . STRING .

    NUMB            reduce using rule 8 (Elem -> . STRING .)
    .               reduce using rule 8 (Elem -> . STRING .)
    CHAR            reduce using rule 8 (Elem -> . STRING .)
    COMENT          reduce using rule 8 (Elem -> . STRING .)
    EMIT            reduce using rule 8 (Elem -> . STRING .)
    CR              reduce using rule 8 (Elem -> . STRING .)
    SWAP            reduce using rule 8 (Elem -> . STRING .)
    DUP             reduce using rule 8 (Elem -> . STRING .)
    DROP            reduce using rule 8 (Elem -> . STRING .)
    KEY             reduce using rule 8 (Elem -> . STRING .)
    SPACE           reduce using rule 8 (Elem -> . STRING .)
    IF              reduce using rule 8 (Elem -> . STRING .)
    ADD             reduce using rule 8 (Elem -> . STRING .)
    SUB             reduce using rule 8 (Elem -> . STRING .)
    DIV             reduce using rule 8 (Elem -> . STRING .)
    MUL             reduce using rule 8 (Elem -> . STRING .)
    MOD             reduce using rule 8 (Elem -> . STRING .)
    NOT             reduce using rule 8 (Elem -> . STRING .)
    AND             reduce using rule 8 (Elem -> . STRING .)
    OR              reduce using rule 8 (Elem -> . STRING .)
    EQUAL           reduce using rule 8 (Elem -> . STRING .)
    BIGGERTHEN      reduce using rule 8 (Elem -> . STRING .)
    SMALLERTHEN     reduce using rule 8 (Elem -> . STRING .)
    BIGOREQ         reduce using rule 8 (Elem -> . STRING .)
    SMALOREQ        reduce using rule 8 (Elem -> . STRING .)
    VARIABLE        reduce using rule 8 (Elem -> . STRING .)
    LOOPI           reduce using rule 8 (Elem -> . STRING .)
    WORD            reduce using rule 8 (Elem -> . STRING .)
    SPACES          reduce using rule 8 (Elem -> . STRING .)
    BEGIN           reduce using rule 8 (Elem -> . STRING .)
    DO              reduce using rule 8 (Elem -> . STRING .)
    :               reduce using rule 8 (Elem -> . STRING .)
    $end            reduce using rule 8 (Elem -> . STRING .)
    THEN            reduce using rule 8 (Elem -> . STRING .)
    ELSE            reduce using rule 8 (Elem -> . STRING .)
    UNTIL           reduce using rule 8 (Elem -> . STRING .)
    WHILE           reduce using rule 8 (Elem -> . STRING .)
    LOOP            reduce using rule 8 (Elem -> . STRING .)
    ;               reduce using rule 8 (Elem -> . STRING .)
    REPEAT          reduce using rule 8 (Elem -> . STRING .)


state 44

    (9) Elem -> CHAR LETTER .

    NUMB            reduce using rule 9 (Elem -> CHAR LETTER .)
    .               reduce using rule 9 (Elem -> CHAR LETTER .)
    CHAR            reduce using rule 9 (Elem -> CHAR LETTER .)
    COMENT          reduce using rule 9 (Elem -> CHAR LETTER .)
    EMIT            reduce using rule 9 (Elem -> CHAR LETTER .)
    CR              reduce using rule 9 (Elem -> CHAR LETTER .)
    SWAP            reduce using rule 9 (Elem -> CHAR LETTER .)
    DUP             reduce using rule 9 (Elem -> CHAR LETTER .)
    DROP            reduce using rule 9 (Elem -> CHAR LETTER .)
    KEY             reduce using rule 9 (Elem -> CHAR LETTER .)
    SPACE           reduce using rule 9 (Elem -> CHAR LETTER .)
    IF              reduce using rule 9 (Elem -> CHAR LETTER .)
    ADD             reduce using rule 9 (Elem -> CHAR LETTER .)
    SUB             reduce using rule 9 (Elem -> CHAR LETTER .)
    DIV             reduce using rule 9 (Elem -> CHAR LETTER .)
    MUL             reduce using rule 9 (Elem -> CHAR LETTER .)
    MOD             reduce using rule 9 (Elem -> CHAR LETTER .)
    NOT             reduce using rule 9 (Elem -> CHAR LETTER .)
    AND             reduce using rule 9 (Elem -> CHAR LETTER .)
    OR              reduce using rule 9 (Elem -> CHAR LETTER .)
    EQUAL           reduce using rule 9 (Elem -> CHAR LETTER .)
    BIGGERTHEN      reduce using rule 9 (Elem -> CHAR LETTER .)
    SMALLERTHEN     reduce using rule 9 (Elem -> CHAR LETTER .)
    BIGOREQ         reduce using rule 9 (Elem -> CHAR LETTER .)
    SMALOREQ        reduce using rule 9 (Elem -> CHAR LETTER .)
    VARIABLE        reduce using rule 9 (Elem -> CHAR LETTER .)
    LOOPI           reduce using rule 9 (Elem -> CHAR LETTER .)
    WORD            reduce using rule 9 (Elem -> CHAR LETTER .)
    SPACES          reduce using rule 9 (Elem -> CHAR LETTER .)
    BEGIN           reduce using rule 9 (Elem -> CHAR LETTER .)
    DO              reduce using rule 9 (Elem -> CHAR LETTER .)
    :               reduce using rule 9 (Elem -> CHAR LETTER .)
    $end            reduce using rule 9 (Elem -> CHAR LETTER .)
    THEN            reduce using rule 9 (Elem -> CHAR LETTER .)
    ELSE            reduce using rule 9 (Elem -> CHAR LETTER .)
    UNTIL           reduce using rule 9 (Elem -> CHAR LETTER .)
    WHILE           reduce using rule 9 (Elem -> CHAR LETTER .)
    LOOP            reduce using rule 9 (Elem -> CHAR LETTER .)
    ;               reduce using rule 9 (Elem -> CHAR LETTER .)
    REPEAT          reduce using rule 9 (Elem -> CHAR LETTER .)


state 45

    (41) Elem -> IF Exec . THEN
    (42) Elem -> IF Exec . ELSE Exec THEN
    (3) Exec -> Exec . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    THEN            shift and go to state 55
    ELSE            shift and go to state 56
    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Elem                           shift and go to state 57
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 46

    (4) Exec -> Elem .

    THEN            reduce using rule 4 (Exec -> Elem .)
    ELSE            reduce using rule 4 (Exec -> Elem .)
    NUMB            reduce using rule 4 (Exec -> Elem .)
    .               reduce using rule 4 (Exec -> Elem .)
    CHAR            reduce using rule 4 (Exec -> Elem .)
    COMENT          reduce using rule 4 (Exec -> Elem .)
    EMIT            reduce using rule 4 (Exec -> Elem .)
    CR              reduce using rule 4 (Exec -> Elem .)
    SWAP            reduce using rule 4 (Exec -> Elem .)
    DUP             reduce using rule 4 (Exec -> Elem .)
    DROP            reduce using rule 4 (Exec -> Elem .)
    KEY             reduce using rule 4 (Exec -> Elem .)
    SPACE           reduce using rule 4 (Exec -> Elem .)
    IF              reduce using rule 4 (Exec -> Elem .)
    ADD             reduce using rule 4 (Exec -> Elem .)
    SUB             reduce using rule 4 (Exec -> Elem .)
    DIV             reduce using rule 4 (Exec -> Elem .)
    MUL             reduce using rule 4 (Exec -> Elem .)
    MOD             reduce using rule 4 (Exec -> Elem .)
    NOT             reduce using rule 4 (Exec -> Elem .)
    AND             reduce using rule 4 (Exec -> Elem .)
    OR              reduce using rule 4 (Exec -> Elem .)
    EQUAL           reduce using rule 4 (Exec -> Elem .)
    BIGGERTHEN      reduce using rule 4 (Exec -> Elem .)
    SMALLERTHEN     reduce using rule 4 (Exec -> Elem .)
    BIGOREQ         reduce using rule 4 (Exec -> Elem .)
    SMALOREQ        reduce using rule 4 (Exec -> Elem .)
    VARIABLE        reduce using rule 4 (Exec -> Elem .)
    LOOPI           reduce using rule 4 (Exec -> Elem .)
    WORD            reduce using rule 4 (Exec -> Elem .)
    SPACES          reduce using rule 4 (Exec -> Elem .)
    BEGIN           reduce using rule 4 (Exec -> Elem .)
    DO              reduce using rule 4 (Exec -> Elem .)
    :               reduce using rule 4 (Exec -> Elem .)
    UNTIL           reduce using rule 4 (Exec -> Elem .)
    WHILE           reduce using rule 4 (Exec -> Elem .)
    LOOP            reduce using rule 4 (Exec -> Elem .)
    ;               reduce using rule 4 (Exec -> Elem .)
    REPEAT          reduce using rule 4 (Exec -> Elem .)


state 47

    (43) Loop -> Begin Exec . UNTIL
    (44) Loop -> Begin Exec . WHILE Exec REPEAT
    (3) Exec -> Exec . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    UNTIL           shift and go to state 58
    WHILE           shift and go to state 59
    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Begin                          shift and go to state 33
    Elem                           shift and go to state 57
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 48

    (45) Loop -> Do Exec . LOOP
    (3) Exec -> Exec . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    LOOP            shift and go to state 60
    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Do                             shift and go to state 34
    Elem                           shift and go to state 57
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Dots                           shift and go to state 38

state 49

    (35) Var -> VARIABLE WORD .

    NUMB            reduce using rule 35 (Var -> VARIABLE WORD .)
    .               reduce using rule 35 (Var -> VARIABLE WORD .)
    CHAR            reduce using rule 35 (Var -> VARIABLE WORD .)
    COMENT          reduce using rule 35 (Var -> VARIABLE WORD .)
    EMIT            reduce using rule 35 (Var -> VARIABLE WORD .)
    CR              reduce using rule 35 (Var -> VARIABLE WORD .)
    SWAP            reduce using rule 35 (Var -> VARIABLE WORD .)
    DUP             reduce using rule 35 (Var -> VARIABLE WORD .)
    DROP            reduce using rule 35 (Var -> VARIABLE WORD .)
    KEY             reduce using rule 35 (Var -> VARIABLE WORD .)
    SPACE           reduce using rule 35 (Var -> VARIABLE WORD .)
    IF              reduce using rule 35 (Var -> VARIABLE WORD .)
    ADD             reduce using rule 35 (Var -> VARIABLE WORD .)
    SUB             reduce using rule 35 (Var -> VARIABLE WORD .)
    DIV             reduce using rule 35 (Var -> VARIABLE WORD .)
    MUL             reduce using rule 35 (Var -> VARIABLE WORD .)
    MOD             reduce using rule 35 (Var -> VARIABLE WORD .)
    NOT             reduce using rule 35 (Var -> VARIABLE WORD .)
    AND             reduce using rule 35 (Var -> VARIABLE WORD .)
    OR              reduce using rule 35 (Var -> VARIABLE WORD .)
    EQUAL           reduce using rule 35 (Var -> VARIABLE WORD .)
    BIGGERTHEN      reduce using rule 35 (Var -> VARIABLE WORD .)
    SMALLERTHEN     reduce using rule 35 (Var -> VARIABLE WORD .)
    BIGOREQ         reduce using rule 35 (Var -> VARIABLE WORD .)
    SMALOREQ        reduce using rule 35 (Var -> VARIABLE WORD .)
    VARIABLE        reduce using rule 35 (Var -> VARIABLE WORD .)
    LOOPI           reduce using rule 35 (Var -> VARIABLE WORD .)
    WORD            reduce using rule 35 (Var -> VARIABLE WORD .)
    SPACES          reduce using rule 35 (Var -> VARIABLE WORD .)
    BEGIN           reduce using rule 35 (Var -> VARIABLE WORD .)
    DO              reduce using rule 35 (Var -> VARIABLE WORD .)
    :               reduce using rule 35 (Var -> VARIABLE WORD .)
    $end            reduce using rule 35 (Var -> VARIABLE WORD .)
    THEN            reduce using rule 35 (Var -> VARIABLE WORD .)
    ELSE            reduce using rule 35 (Var -> VARIABLE WORD .)
    UNTIL           reduce using rule 35 (Var -> VARIABLE WORD .)
    WHILE           reduce using rule 35 (Var -> VARIABLE WORD .)
    LOOP            reduce using rule 35 (Var -> VARIABLE WORD .)
    ;               reduce using rule 35 (Var -> VARIABLE WORD .)
    REPEAT          reduce using rule 35 (Var -> VARIABLE WORD .)


state 50

    (37) Var -> WORD ! .

    NUMB            reduce using rule 37 (Var -> WORD ! .)
    .               reduce using rule 37 (Var -> WORD ! .)
    CHAR            reduce using rule 37 (Var -> WORD ! .)
    COMENT          reduce using rule 37 (Var -> WORD ! .)
    EMIT            reduce using rule 37 (Var -> WORD ! .)
    CR              reduce using rule 37 (Var -> WORD ! .)
    SWAP            reduce using rule 37 (Var -> WORD ! .)
    DUP             reduce using rule 37 (Var -> WORD ! .)
    DROP            reduce using rule 37 (Var -> WORD ! .)
    KEY             reduce using rule 37 (Var -> WORD ! .)
    SPACE           reduce using rule 37 (Var -> WORD ! .)
    IF              reduce using rule 37 (Var -> WORD ! .)
    ADD             reduce using rule 37 (Var -> WORD ! .)
    SUB             reduce using rule 37 (Var -> WORD ! .)
    DIV             reduce using rule 37 (Var -> WORD ! .)
    MUL             reduce using rule 37 (Var -> WORD ! .)
    MOD             reduce using rule 37 (Var -> WORD ! .)
    NOT             reduce using rule 37 (Var -> WORD ! .)
    AND             reduce using rule 37 (Var -> WORD ! .)
    OR              reduce using rule 37 (Var -> WORD ! .)
    EQUAL           reduce using rule 37 (Var -> WORD ! .)
    BIGGERTHEN      reduce using rule 37 (Var -> WORD ! .)
    SMALLERTHEN     reduce using rule 37 (Var -> WORD ! .)
    BIGOREQ         reduce using rule 37 (Var -> WORD ! .)
    SMALOREQ        reduce using rule 37 (Var -> WORD ! .)
    VARIABLE        reduce using rule 37 (Var -> WORD ! .)
    LOOPI           reduce using rule 37 (Var -> WORD ! .)
    WORD            reduce using rule 37 (Var -> WORD ! .)
    SPACES          reduce using rule 37 (Var -> WORD ! .)
    BEGIN           reduce using rule 37 (Var -> WORD ! .)
    DO              reduce using rule 37 (Var -> WORD ! .)
    :               reduce using rule 37 (Var -> WORD ! .)
    $end            reduce using rule 37 (Var -> WORD ! .)
    THEN            reduce using rule 37 (Var -> WORD ! .)
    ELSE            reduce using rule 37 (Var -> WORD ! .)
    UNTIL           reduce using rule 37 (Var -> WORD ! .)
    WHILE           reduce using rule 37 (Var -> WORD ! .)
    LOOP            reduce using rule 37 (Var -> WORD ! .)
    ;               reduce using rule 37 (Var -> WORD ! .)
    REPEAT          reduce using rule 37 (Var -> WORD ! .)


state 51

    (38) Var -> WORD ? .

    NUMB            reduce using rule 38 (Var -> WORD ? .)
    .               reduce using rule 38 (Var -> WORD ? .)
    CHAR            reduce using rule 38 (Var -> WORD ? .)
    COMENT          reduce using rule 38 (Var -> WORD ? .)
    EMIT            reduce using rule 38 (Var -> WORD ? .)
    CR              reduce using rule 38 (Var -> WORD ? .)
    SWAP            reduce using rule 38 (Var -> WORD ? .)
    DUP             reduce using rule 38 (Var -> WORD ? .)
    DROP            reduce using rule 38 (Var -> WORD ? .)
    KEY             reduce using rule 38 (Var -> WORD ? .)
    SPACE           reduce using rule 38 (Var -> WORD ? .)
    IF              reduce using rule 38 (Var -> WORD ? .)
    ADD             reduce using rule 38 (Var -> WORD ? .)
    SUB             reduce using rule 38 (Var -> WORD ? .)
    DIV             reduce using rule 38 (Var -> WORD ? .)
    MUL             reduce using rule 38 (Var -> WORD ? .)
    MOD             reduce using rule 38 (Var -> WORD ? .)
    NOT             reduce using rule 38 (Var -> WORD ? .)
    AND             reduce using rule 38 (Var -> WORD ? .)
    OR              reduce using rule 38 (Var -> WORD ? .)
    EQUAL           reduce using rule 38 (Var -> WORD ? .)
    BIGGERTHEN      reduce using rule 38 (Var -> WORD ? .)
    SMALLERTHEN     reduce using rule 38 (Var -> WORD ? .)
    BIGOREQ         reduce using rule 38 (Var -> WORD ? .)
    SMALOREQ        reduce using rule 38 (Var -> WORD ? .)
    VARIABLE        reduce using rule 38 (Var -> WORD ? .)
    LOOPI           reduce using rule 38 (Var -> WORD ? .)
    WORD            reduce using rule 38 (Var -> WORD ? .)
    SPACES          reduce using rule 38 (Var -> WORD ? .)
    BEGIN           reduce using rule 38 (Var -> WORD ? .)
    DO              reduce using rule 38 (Var -> WORD ? .)
    :               reduce using rule 38 (Var -> WORD ? .)
    $end            reduce using rule 38 (Var -> WORD ? .)
    THEN            reduce using rule 38 (Var -> WORD ? .)
    ELSE            reduce using rule 38 (Var -> WORD ? .)
    UNTIL           reduce using rule 38 (Var -> WORD ? .)
    WHILE           reduce using rule 38 (Var -> WORD ? .)
    LOOP            reduce using rule 38 (Var -> WORD ? .)
    ;               reduce using rule 38 (Var -> WORD ? .)
    REPEAT          reduce using rule 38 (Var -> WORD ? .)


state 52

    (39) Var -> WORD @ .

    NUMB            reduce using rule 39 (Var -> WORD @ .)
    .               reduce using rule 39 (Var -> WORD @ .)
    CHAR            reduce using rule 39 (Var -> WORD @ .)
    COMENT          reduce using rule 39 (Var -> WORD @ .)
    EMIT            reduce using rule 39 (Var -> WORD @ .)
    CR              reduce using rule 39 (Var -> WORD @ .)
    SWAP            reduce using rule 39 (Var -> WORD @ .)
    DUP             reduce using rule 39 (Var -> WORD @ .)
    DROP            reduce using rule 39 (Var -> WORD @ .)
    KEY             reduce using rule 39 (Var -> WORD @ .)
    SPACE           reduce using rule 39 (Var -> WORD @ .)
    IF              reduce using rule 39 (Var -> WORD @ .)
    ADD             reduce using rule 39 (Var -> WORD @ .)
    SUB             reduce using rule 39 (Var -> WORD @ .)
    DIV             reduce using rule 39 (Var -> WORD @ .)
    MUL             reduce using rule 39 (Var -> WORD @ .)
    MOD             reduce using rule 39 (Var -> WORD @ .)
    NOT             reduce using rule 39 (Var -> WORD @ .)
    AND             reduce using rule 39 (Var -> WORD @ .)
    OR              reduce using rule 39 (Var -> WORD @ .)
    EQUAL           reduce using rule 39 (Var -> WORD @ .)
    BIGGERTHEN      reduce using rule 39 (Var -> WORD @ .)
    SMALLERTHEN     reduce using rule 39 (Var -> WORD @ .)
    BIGOREQ         reduce using rule 39 (Var -> WORD @ .)
    SMALOREQ        reduce using rule 39 (Var -> WORD @ .)
    VARIABLE        reduce using rule 39 (Var -> WORD @ .)
    LOOPI           reduce using rule 39 (Var -> WORD @ .)
    WORD            reduce using rule 39 (Var -> WORD @ .)
    SPACES          reduce using rule 39 (Var -> WORD @ .)
    BEGIN           reduce using rule 39 (Var -> WORD @ .)
    DO              reduce using rule 39 (Var -> WORD @ .)
    :               reduce using rule 39 (Var -> WORD @ .)
    $end            reduce using rule 39 (Var -> WORD @ .)
    THEN            reduce using rule 39 (Var -> WORD @ .)
    ELSE            reduce using rule 39 (Var -> WORD @ .)
    UNTIL           reduce using rule 39 (Var -> WORD @ .)
    WHILE           reduce using rule 39 (Var -> WORD @ .)
    LOOP            reduce using rule 39 (Var -> WORD @ .)
    ;               reduce using rule 39 (Var -> WORD @ .)
    REPEAT          reduce using rule 39 (Var -> WORD @ .)


state 53

    (40) Var -> WORD MAIS_EXCLAMACAO .

    NUMB            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    .               reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    CHAR            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    COMENT          reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    EMIT            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    CR              reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    SWAP            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    DUP             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    DROP            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    KEY             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    SPACE           reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    IF              reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    ADD             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    SUB             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    DIV             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    MUL             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    MOD             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    NOT             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    AND             reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    OR              reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    EQUAL           reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    BIGGERTHEN      reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    SMALLERTHEN     reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    BIGOREQ         reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    SMALOREQ        reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    VARIABLE        reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    LOOPI           reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    WORD            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    SPACES          reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    BEGIN           reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    DO              reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    :               reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    $end            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    THEN            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    ELSE            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    UNTIL           reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    WHILE           reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    LOOP            reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    ;               reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)
    REPEAT          reduce using rule 40 (Var -> WORD MAIS_EXCLAMACAO .)


state 54

    (48) Function -> Dots WORD . Exec ;
    (3) Exec -> . Exec Elem
    (4) Exec -> . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Dots                           shift and go to state 38
    Exec                           shift and go to state 61
    Elem                           shift and go to state 46
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34

state 55

    (41) Elem -> IF Exec THEN .

    NUMB            reduce using rule 41 (Elem -> IF Exec THEN .)
    .               reduce using rule 41 (Elem -> IF Exec THEN .)
    CHAR            reduce using rule 41 (Elem -> IF Exec THEN .)
    COMENT          reduce using rule 41 (Elem -> IF Exec THEN .)
    EMIT            reduce using rule 41 (Elem -> IF Exec THEN .)
    CR              reduce using rule 41 (Elem -> IF Exec THEN .)
    SWAP            reduce using rule 41 (Elem -> IF Exec THEN .)
    DUP             reduce using rule 41 (Elem -> IF Exec THEN .)
    DROP            reduce using rule 41 (Elem -> IF Exec THEN .)
    KEY             reduce using rule 41 (Elem -> IF Exec THEN .)
    SPACE           reduce using rule 41 (Elem -> IF Exec THEN .)
    IF              reduce using rule 41 (Elem -> IF Exec THEN .)
    ADD             reduce using rule 41 (Elem -> IF Exec THEN .)
    SUB             reduce using rule 41 (Elem -> IF Exec THEN .)
    DIV             reduce using rule 41 (Elem -> IF Exec THEN .)
    MUL             reduce using rule 41 (Elem -> IF Exec THEN .)
    MOD             reduce using rule 41 (Elem -> IF Exec THEN .)
    NOT             reduce using rule 41 (Elem -> IF Exec THEN .)
    AND             reduce using rule 41 (Elem -> IF Exec THEN .)
    OR              reduce using rule 41 (Elem -> IF Exec THEN .)
    EQUAL           reduce using rule 41 (Elem -> IF Exec THEN .)
    BIGGERTHEN      reduce using rule 41 (Elem -> IF Exec THEN .)
    SMALLERTHEN     reduce using rule 41 (Elem -> IF Exec THEN .)
    BIGOREQ         reduce using rule 41 (Elem -> IF Exec THEN .)
    SMALOREQ        reduce using rule 41 (Elem -> IF Exec THEN .)
    VARIABLE        reduce using rule 41 (Elem -> IF Exec THEN .)
    LOOPI           reduce using rule 41 (Elem -> IF Exec THEN .)
    WORD            reduce using rule 41 (Elem -> IF Exec THEN .)
    SPACES          reduce using rule 41 (Elem -> IF Exec THEN .)
    BEGIN           reduce using rule 41 (Elem -> IF Exec THEN .)
    DO              reduce using rule 41 (Elem -> IF Exec THEN .)
    :               reduce using rule 41 (Elem -> IF Exec THEN .)
    $end            reduce using rule 41 (Elem -> IF Exec THEN .)
    THEN            reduce using rule 41 (Elem -> IF Exec THEN .)
    ELSE            reduce using rule 41 (Elem -> IF Exec THEN .)
    UNTIL           reduce using rule 41 (Elem -> IF Exec THEN .)
    WHILE           reduce using rule 41 (Elem -> IF Exec THEN .)
    LOOP            reduce using rule 41 (Elem -> IF Exec THEN .)
    ;               reduce using rule 41 (Elem -> IF Exec THEN .)
    REPEAT          reduce using rule 41 (Elem -> IF Exec THEN .)


state 56

    (42) Elem -> IF Exec ELSE . Exec THEN
    (3) Exec -> . Exec Elem
    (4) Exec -> . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Exec                           shift and go to state 62
    Elem                           shift and go to state 46
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 57

    (3) Exec -> Exec Elem .

    THEN            reduce using rule 3 (Exec -> Exec Elem .)
    ELSE            reduce using rule 3 (Exec -> Exec Elem .)
    NUMB            reduce using rule 3 (Exec -> Exec Elem .)
    .               reduce using rule 3 (Exec -> Exec Elem .)
    CHAR            reduce using rule 3 (Exec -> Exec Elem .)
    COMENT          reduce using rule 3 (Exec -> Exec Elem .)
    EMIT            reduce using rule 3 (Exec -> Exec Elem .)
    CR              reduce using rule 3 (Exec -> Exec Elem .)
    SWAP            reduce using rule 3 (Exec -> Exec Elem .)
    DUP             reduce using rule 3 (Exec -> Exec Elem .)
    DROP            reduce using rule 3 (Exec -> Exec Elem .)
    KEY             reduce using rule 3 (Exec -> Exec Elem .)
    SPACE           reduce using rule 3 (Exec -> Exec Elem .)
    IF              reduce using rule 3 (Exec -> Exec Elem .)
    ADD             reduce using rule 3 (Exec -> Exec Elem .)
    SUB             reduce using rule 3 (Exec -> Exec Elem .)
    DIV             reduce using rule 3 (Exec -> Exec Elem .)
    MUL             reduce using rule 3 (Exec -> Exec Elem .)
    MOD             reduce using rule 3 (Exec -> Exec Elem .)
    NOT             reduce using rule 3 (Exec -> Exec Elem .)
    AND             reduce using rule 3 (Exec -> Exec Elem .)
    OR              reduce using rule 3 (Exec -> Exec Elem .)
    EQUAL           reduce using rule 3 (Exec -> Exec Elem .)
    BIGGERTHEN      reduce using rule 3 (Exec -> Exec Elem .)
    SMALLERTHEN     reduce using rule 3 (Exec -> Exec Elem .)
    BIGOREQ         reduce using rule 3 (Exec -> Exec Elem .)
    SMALOREQ        reduce using rule 3 (Exec -> Exec Elem .)
    VARIABLE        reduce using rule 3 (Exec -> Exec Elem .)
    LOOPI           reduce using rule 3 (Exec -> Exec Elem .)
    WORD            reduce using rule 3 (Exec -> Exec Elem .)
    SPACES          reduce using rule 3 (Exec -> Exec Elem .)
    BEGIN           reduce using rule 3 (Exec -> Exec Elem .)
    DO              reduce using rule 3 (Exec -> Exec Elem .)
    :               reduce using rule 3 (Exec -> Exec Elem .)
    UNTIL           reduce using rule 3 (Exec -> Exec Elem .)
    WHILE           reduce using rule 3 (Exec -> Exec Elem .)
    LOOP            reduce using rule 3 (Exec -> Exec Elem .)
    ;               reduce using rule 3 (Exec -> Exec Elem .)
    REPEAT          reduce using rule 3 (Exec -> Exec Elem .)


state 58

    (43) Loop -> Begin Exec UNTIL .

    NUMB            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    .               reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    CHAR            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    COMENT          reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    EMIT            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    CR              reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    SWAP            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    DUP             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    DROP            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    KEY             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    SPACE           reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    IF              reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    ADD             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    SUB             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    DIV             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    MUL             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    MOD             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    NOT             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    AND             reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    OR              reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    EQUAL           reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    BIGGERTHEN      reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    SMALLERTHEN     reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    BIGOREQ         reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    SMALOREQ        reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    VARIABLE        reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    LOOPI           reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    WORD            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    SPACES          reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    BEGIN           reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    DO              reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    :               reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    $end            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    THEN            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    ELSE            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    UNTIL           reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    WHILE           reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    LOOP            reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    ;               reduce using rule 43 (Loop -> Begin Exec UNTIL .)
    REPEAT          reduce using rule 43 (Loop -> Begin Exec UNTIL .)


state 59

    (44) Loop -> Begin Exec WHILE . Exec REPEAT
    (3) Exec -> . Exec Elem
    (4) Exec -> . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Begin                          shift and go to state 33
    Exec                           shift and go to state 63
    Elem                           shift and go to state 46
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 60

    (45) Loop -> Do Exec LOOP .

    NUMB            reduce using rule 45 (Loop -> Do Exec LOOP .)
    .               reduce using rule 45 (Loop -> Do Exec LOOP .)
    CHAR            reduce using rule 45 (Loop -> Do Exec LOOP .)
    COMENT          reduce using rule 45 (Loop -> Do Exec LOOP .)
    EMIT            reduce using rule 45 (Loop -> Do Exec LOOP .)
    CR              reduce using rule 45 (Loop -> Do Exec LOOP .)
    SWAP            reduce using rule 45 (Loop -> Do Exec LOOP .)
    DUP             reduce using rule 45 (Loop -> Do Exec LOOP .)
    DROP            reduce using rule 45 (Loop -> Do Exec LOOP .)
    KEY             reduce using rule 45 (Loop -> Do Exec LOOP .)
    SPACE           reduce using rule 45 (Loop -> Do Exec LOOP .)
    IF              reduce using rule 45 (Loop -> Do Exec LOOP .)
    ADD             reduce using rule 45 (Loop -> Do Exec LOOP .)
    SUB             reduce using rule 45 (Loop -> Do Exec LOOP .)
    DIV             reduce using rule 45 (Loop -> Do Exec LOOP .)
    MUL             reduce using rule 45 (Loop -> Do Exec LOOP .)
    MOD             reduce using rule 45 (Loop -> Do Exec LOOP .)
    NOT             reduce using rule 45 (Loop -> Do Exec LOOP .)
    AND             reduce using rule 45 (Loop -> Do Exec LOOP .)
    OR              reduce using rule 45 (Loop -> Do Exec LOOP .)
    EQUAL           reduce using rule 45 (Loop -> Do Exec LOOP .)
    BIGGERTHEN      reduce using rule 45 (Loop -> Do Exec LOOP .)
    SMALLERTHEN     reduce using rule 45 (Loop -> Do Exec LOOP .)
    BIGOREQ         reduce using rule 45 (Loop -> Do Exec LOOP .)
    SMALOREQ        reduce using rule 45 (Loop -> Do Exec LOOP .)
    VARIABLE        reduce using rule 45 (Loop -> Do Exec LOOP .)
    LOOPI           reduce using rule 45 (Loop -> Do Exec LOOP .)
    WORD            reduce using rule 45 (Loop -> Do Exec LOOP .)
    SPACES          reduce using rule 45 (Loop -> Do Exec LOOP .)
    BEGIN           reduce using rule 45 (Loop -> Do Exec LOOP .)
    DO              reduce using rule 45 (Loop -> Do Exec LOOP .)
    :               reduce using rule 45 (Loop -> Do Exec LOOP .)
    $end            reduce using rule 45 (Loop -> Do Exec LOOP .)
    THEN            reduce using rule 45 (Loop -> Do Exec LOOP .)
    ELSE            reduce using rule 45 (Loop -> Do Exec LOOP .)
    UNTIL           reduce using rule 45 (Loop -> Do Exec LOOP .)
    WHILE           reduce using rule 45 (Loop -> Do Exec LOOP .)
    LOOP            reduce using rule 45 (Loop -> Do Exec LOOP .)
    ;               reduce using rule 45 (Loop -> Do Exec LOOP .)
    REPEAT          reduce using rule 45 (Loop -> Do Exec LOOP .)


state 61

    (48) Function -> Dots WORD Exec . ;
    (3) Exec -> Exec . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    ;               shift and go to state 64
    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Dots                           shift and go to state 38
    Elem                           shift and go to state 57
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34

state 62

    (42) Elem -> IF Exec ELSE Exec . THEN
    (3) Exec -> Exec . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    THEN            shift and go to state 65
    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Elem                           shift and go to state 57
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Begin                          shift and go to state 33
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 63

    (44) Loop -> Begin Exec WHILE Exec . REPEAT
    (3) Exec -> Exec . Elem
    (5) Elem -> . NUMB
    (6) Elem -> . Operador
    (7) Elem -> . .
    (8) Elem -> . . STRING
    (9) Elem -> . CHAR LETTER
    (10) Elem -> . Loop
    (11) Elem -> . Var
    (12) Elem -> . COMENT
    (13) Elem -> . EMIT
    (14) Elem -> . CR
    (15) Elem -> . SWAP
    (16) Elem -> . DUP
    (17) Elem -> . DROP
    (18) Elem -> . KEY
    (19) Elem -> . SPACE
    (20) Elem -> . Function
    (21) Elem -> . Word
    (41) Elem -> . IF Exec THEN
    (42) Elem -> . IF Exec ELSE Exec THEN
    (22) Operador -> . ADD
    (23) Operador -> . SUB
    (24) Operador -> . DIV
    (25) Operador -> . MUL
    (26) Operador -> . MOD
    (27) Operador -> . NOT
    (28) Operador -> . AND
    (29) Operador -> . OR
    (30) Operador -> . EQUAL
    (31) Operador -> . BIGGERTHEN
    (32) Operador -> . SMALLERTHEN
    (33) Operador -> . BIGOREQ
    (34) Operador -> . SMALOREQ
    (43) Loop -> . Begin Exec UNTIL
    (44) Loop -> . Begin Exec WHILE Exec REPEAT
    (45) Loop -> . Do Exec LOOP
    (35) Var -> . VARIABLE WORD
    (36) Var -> . LOOPI
    (37) Var -> . WORD !
    (38) Var -> . WORD ?
    (39) Var -> . WORD @
    (40) Var -> . WORD MAIS_EXCLAMACAO
    (48) Function -> . Dots WORD Exec ;
    (50) Word -> . WORD
    (51) Word -> . SPACES
    (46) Begin -> . BEGIN
    (47) Do -> . DO
    (49) Dots -> . :

    REPEAT          shift and go to state 66
    NUMB            shift and go to state 3
    .               shift and go to state 5
    CHAR            shift and go to state 6
    COMENT          shift and go to state 9
    EMIT            shift and go to state 10
    CR              shift and go to state 11
    SWAP            shift and go to state 12
    DUP             shift and go to state 13
    DROP            shift and go to state 14
    KEY             shift and go to state 15
    SPACE           shift and go to state 16
    IF              shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    DIV             shift and go to state 22
    MUL             shift and go to state 23
    MOD             shift and go to state 24
    NOT             shift and go to state 25
    AND             shift and go to state 26
    OR              shift and go to state 27
    EQUAL           shift and go to state 28
    BIGGERTHEN      shift and go to state 29
    SMALLERTHEN     shift and go to state 30
    BIGOREQ         shift and go to state 31
    SMALOREQ        shift and go to state 32
    VARIABLE        shift and go to state 35
    LOOPI           shift and go to state 37
    WORD            shift and go to state 36
    SPACES          shift and go to state 39
    BEGIN           shift and go to state 40
    DO              shift and go to state 41
    :               shift and go to state 42

    Begin                          shift and go to state 33
    Elem                           shift and go to state 57
    Operador                       shift and go to state 4
    Loop                           shift and go to state 7
    Var                            shift and go to state 8
    Function                       shift and go to state 17
    Word                           shift and go to state 18
    Do                             shift and go to state 34
    Dots                           shift and go to state 38

state 64

    (48) Function -> Dots WORD Exec ; .

    NUMB            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    .               reduce using rule 48 (Function -> Dots WORD Exec ; .)
    CHAR            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    COMENT          reduce using rule 48 (Function -> Dots WORD Exec ; .)
    EMIT            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    CR              reduce using rule 48 (Function -> Dots WORD Exec ; .)
    SWAP            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    DUP             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    DROP            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    KEY             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    SPACE           reduce using rule 48 (Function -> Dots WORD Exec ; .)
    IF              reduce using rule 48 (Function -> Dots WORD Exec ; .)
    ADD             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    SUB             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    DIV             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    MUL             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    MOD             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    NOT             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    AND             reduce using rule 48 (Function -> Dots WORD Exec ; .)
    OR              reduce using rule 48 (Function -> Dots WORD Exec ; .)
    EQUAL           reduce using rule 48 (Function -> Dots WORD Exec ; .)
    BIGGERTHEN      reduce using rule 48 (Function -> Dots WORD Exec ; .)
    SMALLERTHEN     reduce using rule 48 (Function -> Dots WORD Exec ; .)
    BIGOREQ         reduce using rule 48 (Function -> Dots WORD Exec ; .)
    SMALOREQ        reduce using rule 48 (Function -> Dots WORD Exec ; .)
    VARIABLE        reduce using rule 48 (Function -> Dots WORD Exec ; .)
    LOOPI           reduce using rule 48 (Function -> Dots WORD Exec ; .)
    WORD            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    SPACES          reduce using rule 48 (Function -> Dots WORD Exec ; .)
    BEGIN           reduce using rule 48 (Function -> Dots WORD Exec ; .)
    DO              reduce using rule 48 (Function -> Dots WORD Exec ; .)
    :               reduce using rule 48 (Function -> Dots WORD Exec ; .)
    $end            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    THEN            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    ELSE            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    UNTIL           reduce using rule 48 (Function -> Dots WORD Exec ; .)
    WHILE           reduce using rule 48 (Function -> Dots WORD Exec ; .)
    LOOP            reduce using rule 48 (Function -> Dots WORD Exec ; .)
    ;               reduce using rule 48 (Function -> Dots WORD Exec ; .)
    REPEAT          reduce using rule 48 (Function -> Dots WORD Exec ; .)


state 65

    (42) Elem -> IF Exec ELSE Exec THEN .

    NUMB            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    .               reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    CHAR            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    COMENT          reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    EMIT            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    CR              reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    SWAP            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    DUP             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    DROP            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    KEY             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    SPACE           reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    IF              reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    ADD             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    SUB             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    DIV             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    MUL             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    MOD             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    NOT             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    AND             reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    OR              reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    EQUAL           reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    BIGGERTHEN      reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    SMALLERTHEN     reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    BIGOREQ         reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    SMALOREQ        reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    VARIABLE        reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    LOOPI           reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    WORD            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    SPACES          reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    BEGIN           reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    DO              reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    :               reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    $end            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    THEN            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    ELSE            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    UNTIL           reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    WHILE           reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    LOOP            reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    ;               reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)
    REPEAT          reduce using rule 42 (Elem -> IF Exec ELSE Exec THEN .)


state 66

    (44) Loop -> Begin Exec WHILE Exec REPEAT .

    NUMB            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    .               reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    CHAR            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    COMENT          reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    EMIT            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    CR              reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    SWAP            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    DUP             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    DROP            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    KEY             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    SPACE           reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    IF              reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    ADD             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    SUB             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    DIV             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    MUL             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    MOD             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    NOT             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    AND             reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    OR              reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    EQUAL           reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    BIGGERTHEN      reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    SMALLERTHEN     reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    BIGOREQ         reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    SMALOREQ        reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    VARIABLE        reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    LOOPI           reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    WORD            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    SPACES          reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    BEGIN           reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    DO              reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    :               reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    $end            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    THEN            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    ELSE            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    UNTIL           reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    WHILE           reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    LOOP            reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    ;               reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)
    REPEAT          reduce using rule 44 (Loop -> Begin Exec WHILE Exec REPEAT .)

